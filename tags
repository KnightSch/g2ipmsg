!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AES_CAPS	src/symcrypt.h	54;"	d
BLOWFISH_CAPS	src/symcrypt.h	51;"	d
CODESET_H	src/codeset.h	27;"	d
COMMON_H	src/common.h	27;"	d
COPYING_H	src/copying.h	27;"	d
CRYPT_RND_MAX_RETRY	src/cryptcommon.h	53;"	d
DBUS_API_SUBJECT_TO_CHANGE	src/common.h	100;"	d
DBUS_API_SUBJECT_TO_CHANGE	src/dbusif.h	42;"	d
DEFAULT_PORT	src/hostinfo.h	30;"	d
DOWNLOADS_H	src/downloads.h	27;"	d
DOWNLOAD_FILEATTR_NUM	src/downloads.h	48;"	d
DOWNLOAD_FILEID_NUM	src/downloads.h	43;"	d
DOWNLOAD_FILENAME_NUM	src/downloads.h	44;"	d
DOWNLOAD_FILESIZE_NUM	src/downloads.h	46;"	d
DOWNLOAD_FILETYPE_NUM	src/downloads.h	49;"	d
DOWNLOAD_PROGRESS_NUM	src/downloads.h	47;"	d
DOWNLOAD_RECVSIZE_NUM	src/downloads.h	45;"	d
DOWNLOAD_VIEW_FNAME	src/fileattach.h	42;"	d
DOWNLOAD_VIEW_PKTNO	src/fileattach.h	45;"	d
DOWNLOAD_VIEW_REMAIN	src/fileattach.h	43;"	d
DOWNLOAD_VIEW_USER	src/fileattach.h	44;"	d
FATTACH_BUFF_LEN	src/fileattach.h	41;"	d
FILEATTACH_H	src/fileattach.h	27;"	d
FILELIST_SEPARATOR	src/ipmsg.h	149;"	d
FILE_ATTCH_ONE_EXT_SIZE	src/fileattach.h	40;"	d
FUZAI_H	src/fuzai.h	27;"	d
G2IPMSG_AUTHOR	src/copying.h	29;"	d
G2IPMSG_BASE64_H	src/base64.h	27;"	d
G2IPMSG_COMPAT_H	src/compat.h	27;"	d
G2IPMSG_CRYPTOCOMMON_H	src/cryptcommon.h	27;"	d
G2IPMSG_CRYPTO_CAP	src/cryptcommon.h	50;"	d
G2IPMSG_CRYPT_EBUFSIZ	src/cryptcommon.h	60;"	d
G2IPMSG_DBUSIF_H	src/dbusif.h	27;"	d
G2IPMSG_DEFAULT_ENTRY_FLAGS	src/g2ipmsg.h	109;"	d
G2IPMSG_DEFAULT_ENTRY_FLAGS	src/g2ipmsg.h	116;"	d
G2IPMSG_DEFAULT_HOST_LIST_LEN	src/g2ipmsg.h	123;"	d
G2IPMSG_DEFAULT_SEND_FLAGS	src/g2ipmsg.h	112;"	d
G2IPMSG_DEFAULT_SEND_FLAGS	src/g2ipmsg.h	119;"	d
G2IPMSG_DIALOG_WAIT_MS	src/g2ipmsg.h	73;"	d
G2IPMSG_H	src/g2ipmsg.h	27;"	d
G2IPMSG_KEY_DIR	src/cryptcommon.h	56;"	d
G2IPMSG_PUBCRYPT_H	src/pubcrypt.h	27;"	d
G2IPMSG_SCREENSAVER_H	src/screensaver.h	27;"	d
G2IPMSG_SOUND_FILE	src/g2ipmsg.h	127;"	d
G2IPMSG_SOUND_H	src/sound.h	27;"	d
G2IPMSG_SYMCRYPT_H	src/symcrypt.h	27;"	d
G2IPMSG_TRANSLATOR	src/copying.h	30;"	d
G2IPMSG_UNKNOWN_NAME	src/g2ipmsg.h	130;"	d
G2IPMSG_UTIL_H	src/util.h	27;"	d
GET_ID	src/uicommon.c	30;"	d	file:
GLADE_HOOKUP_OBJECT	src/applet.c	32;"	d	file:
GLADE_HOOKUP_OBJECT	src/callbacks.c	38;"	d	file:
GLADE_HOOKUP_OBJECT	src/interface.c	22;"	d	file:
GLADE_HOOKUP_OBJECT	src/ipmsg.c	33;"	d	file:
GLADE_HOOKUP_OBJECT	src/menu.c	31;"	d	file:
GLADE_HOOKUP_OBJECT	src/recvmsg.c	28;"	d	file:
GLADE_HOOKUP_OBJECT	src/systray.c	30;"	d	file:
GLADE_HOOKUP_OBJECT	src/uicommon.c	34;"	d	file:
GLADE_HOOKUP_OBJECT_NO_REF	src/applet.c	36;"	d	file:
GLADE_HOOKUP_OBJECT_NO_REF	src/interface.c	26;"	d	file:
GLADE_HOOKUP_OBJECT_NO_REF	src/ipmsg.c	37;"	d	file:
GLADE_HOOKUP_OBJECT_NO_REF	src/menu.c	28;"	d	file:
GLADE_HOOKUP_OBJECT_NO_REF	src/systray.c	34;"	d	file:
GLADE_HOOKUP_OBJECT_NO_REF	src/uicommon.c	32;"	d	file:
GdiFlush	configure	/^GdiFlush();$/;"	f
HEADER_VISUAL_GRID_ID	src/hostinfo.h	87;"	d
HEADER_VISUAL_GROUP_ID	src/hostinfo.h	82;"	d
HEADER_VISUAL_HOST_ID	src/hostinfo.h	83;"	d
HEADER_VISUAL_IPADDR_ID	src/hostinfo.h	84;"	d
HEADER_VISUAL_LOGON_ID	src/hostinfo.h	85;"	d
HEADER_VISUAL_PRIO_ID	src/hostinfo.h	86;"	d
HLIST_ENTRY_SEPARATOR	src/ipmsg.h	152;"	d
HOOKUP_ID	src/uicommon.c	28;"	d	file:
HOSTINFO_H	src/hostinfo.h	27;"	d
HOSTINFO_KEY_ABSENCE_HEIGHT	src/hostinfo.h	58;"	d
HOSTINFO_KEY_ABSENCE_WIDTH	src/hostinfo.h	57;"	d
HOSTINFO_KEY_ABS_MSGS	src/hostinfo.h	49;"	d
HOSTINFO_KEY_ABS_TITLE	src/hostinfo.h	48;"	d
HOSTINFO_KEY_ALLOW_HLIST	src/hostinfo.h	62;"	d
HOSTINFO_KEY_ATTACHWIN_HEIGHT	src/hostinfo.h	56;"	d
HOSTINFO_KEY_ATTACHWIN_WIDTH	src/hostinfo.h	55;"	d
HOSTINFO_KEY_BROADCASTS	src/hostinfo.h	38;"	d
HOSTINFO_KEY_CIPHER	src/hostinfo.h	72;"	d
HOSTINFO_KEY_CITATION	src/hostinfo.h	42;"	d
HOSTINFO_KEY_CITE_STRING	src/hostinfo.h	47;"	d
HOSTINFO_KEY_CONFIRM_MSG	src/hostinfo.h	37;"	d
HOSTINFO_KEY_CRYPT_SPEED	src/hostinfo.h	71;"	d
HOSTINFO_KEY_DEBUG	src/hostinfo.h	50;"	d
HOSTINFO_KEY_DEFAULT_PRIO	src/hostinfo.h	63;"	d
HOSTINFO_KEY_DIALUP	src/hostinfo.h	60;"	d
HOSTINFO_KEY_ENABLE_LOG	src/hostinfo.h	44;"	d
HOSTINFO_KEY_ENCLOSE	src/hostinfo.h	41;"	d
HOSTINFO_KEY_ENCRYPT_PUBKEY	src/hostinfo.h	73;"	d
HOSTINFO_KEY_ENC_PASSWD	src/hostinfo.h	75;"	d
HOSTINFO_KEY_EXTERNAL_ENCODING	src/hostinfo.h	79;"	d
HOSTINFO_KEY_GET_HLIST	src/hostinfo.h	61;"	d
HOSTINFO_KEY_GROUP	src/hostinfo.h	34;"	d
HOSTINFO_KEY_HEADER_ORDER	src/hostinfo.h	66;"	d
HOSTINFO_KEY_HEADER_VISIBLE	src/hostinfo.h	65;"	d
HOSTINFO_KEY_ICONIFY_DIALOGS	src/hostinfo.h	78;"	d
HOSTINFO_KEY_IPV6	src/hostinfo.h	59;"	d
HOSTINFO_KEY_LOCK	src/hostinfo.h	74;"	d
HOSTINFO_KEY_LOCK_MSGLOG	src/hostinfo.h	77;"	d
HOSTINFO_KEY_LOCK_PASSWD	src/hostinfo.h	76;"	d
HOSTINFO_KEY_LOGFILEPATH	src/hostinfo.h	43;"	d
HOSTINFO_KEY_LOG_IPADDR	src/hostinfo.h	46;"	d
HOSTINFO_KEY_LOG_NAME	src/hostinfo.h	45;"	d
HOSTINFO_KEY_MSGSEC	src/hostinfo.h	36;"	d
HOSTINFO_KEY_MSGWIN_HEIGHT	src/hostinfo.h	52;"	d
HOSTINFO_KEY_MSGWIN_WIDTH	src/hostinfo.h	51;"	d
HOSTINFO_KEY_NICKNAME	src/hostinfo.h	35;"	d
HOSTINFO_KEY_POPUP	src/hostinfo.h	39;"	d
HOSTINFO_KEY_PORT	src/hostinfo.h	33;"	d
HOSTINFO_KEY_RECVWIN_HEIGHT	src/hostinfo.h	54;"	d
HOSTINFO_KEY_RECVWIN_WIDTH	src/hostinfo.h	53;"	d
HOSTINFO_KEY_SORT_GROUP	src/hostinfo.h	67;"	d
HOSTINFO_KEY_SORT_GROUP_DESCENDING	src/hostinfo.h	69;"	d
HOSTINFO_KEY_SOUND	src/hostinfo.h	40;"	d
HOSTINFO_KEY_SUB_SORT_DESCENDING	src/hostinfo.h	70;"	d
HOSTINFO_KEY_SUB_SORT_ID	src/hostinfo.h	68;"	d
HOSTINFO_KEY_USE_SYSTRAY	src/hostinfo.h	64;"	d
HOSTINFO_PASSWD_TYPE_ENCKEY	src/hostinfo.h	93;"	d
HOSTINFO_PASSWD_TYPE_LOCK	src/hostinfo.h	94;"	d
HOSTINFO_PRIO_SEPARATOR	src/hostinfo.h	81;"	d
HOSTLIST_DUMMY	src/ipmsg.h	151;"	d
HOSTLIST_SEPARATOR	src/ipmsg.h	150;"	d
IPMG_LOCK_FILE	src/g2ipmsg.h	56;"	d
IPMSG_ABSENCEOPT	src/ipmsg.h	65;"	d
IPMSG_AES_128	src/ipmsg.h	98;"	d
IPMSG_AES_192	src/ipmsg.h	99;"	d
IPMSG_AES_256	src/ipmsg.h	100;"	d
IPMSG_ANSENTRY	src/ipmsg.h	36;"	d
IPMSG_ANSLIST	src/ipmsg.h	42;"	d
IPMSG_ANSPUBKEY	src/ipmsg.h	62;"	d
IPMSG_ANSREADMSG	src/ipmsg.h	49;"	d
IPMSG_ASSERT_PRIVATE	src/private.h	47;"	d
IPMSG_AUTORETOPT	src/ipmsg.h	78;"	d
IPMSG_BLOWFISH_128	src/ipmsg.h	96;"	d
IPMSG_BLOWFISH_128ALL	src/ipmsg.h	111;"	d
IPMSG_BLOWFISH_128OLD	src/ipmsg.h	108;"	d
IPMSG_BLOWFISH_256	src/ipmsg.h	97;"	d
IPMSG_BROADCASTOPT	src/ipmsg.h	75;"	d
IPMSG_BR_ABSENCE	src/ipmsg.h	37;"	d
IPMSG_BR_ENTRY	src/ipmsg.h	34;"	d
IPMSG_BR_EXIT	src/ipmsg.h	35;"	d
IPMSG_BR_ISGETLIST	src/ipmsg.h	39;"	d
IPMSG_BR_ISGETLIST2	src/ipmsg.h	43;"	d
IPMSG_BUFSIZ	src/g2ipmsg.h	85;"	d
IPMSG_COMMON_MAX_RETRY	src/g2ipmsg.h	49;"	d
IPMSG_DELMSG	src/ipmsg.h	48;"	d
IPMSG_DIALUPOPT	src/ipmsg.h	67;"	d
IPMSG_ENCRYPTOPT	src/ipmsg.h	69;"	d
IPMSG_FILEATTACHOPT	src/ipmsg.h	68;"	d
IPMSG_FILE_ACL	src/ipmsg.h	145;"	d
IPMSG_FILE_ALIASFNAME	src/ipmsg.h	146;"	d
IPMSG_FILE_ARCHIVEOPT	src/ipmsg.h	127;"	d
IPMSG_FILE_ATIME	src/ipmsg.h	140;"	d
IPMSG_FILE_BDEV	src/ipmsg.h	119;"	d
IPMSG_FILE_CDEV	src/ipmsg.h	118;"	d
IPMSG_FILE_CREATETIME	src/ipmsg.h	141;"	d
IPMSG_FILE_CREATOR	src/ipmsg.h	142;"	d
IPMSG_FILE_CTIME	src/ipmsg.h	138;"	d
IPMSG_FILE_DIR	src/ipmsg.h	115;"	d
IPMSG_FILE_EXHIDDENOPT	src/ipmsg.h	126;"	d
IPMSG_FILE_FIFO	src/ipmsg.h	120;"	d
IPMSG_FILE_FILETYPE	src/ipmsg.h	143;"	d
IPMSG_FILE_FINDERINFO	src/ipmsg.h	144;"	d
IPMSG_FILE_GID	src/ipmsg.h	133;"	d
IPMSG_FILE_GROUPNAME	src/ipmsg.h	134;"	d
IPMSG_FILE_HIDDENOPT	src/ipmsg.h	125;"	d
IPMSG_FILE_MAJORNO	src/ipmsg.h	136;"	d
IPMSG_FILE_MINORNO	src/ipmsg.h	137;"	d
IPMSG_FILE_MTIME	src/ipmsg.h	139;"	d
IPMSG_FILE_PERM	src/ipmsg.h	135;"	d
IPMSG_FILE_REGULAR	src/ipmsg.h	114;"	d
IPMSG_FILE_RESFORK	src/ipmsg.h	121;"	d
IPMSG_FILE_RETPARENT	src/ipmsg.h	116;"	d
IPMSG_FILE_RONLYOPT	src/ipmsg.h	124;"	d
IPMSG_FILE_SYMLINK	src/ipmsg.h	117;"	d
IPMSG_FILE_SYSTEMOPT	src/ipmsg.h	128;"	d
IPMSG_FILE_UID	src/ipmsg.h	131;"	d
IPMSG_FILE_UNICODEFNAME	src/ipmsg.h	147;"	d
IPMSG_FILE_USERNAME	src/ipmsg.h	132;"	d
IPMSG_GETABSENCEINFO	src/ipmsg.h	54;"	d
IPMSG_GETDIRFILES	src/ipmsg.h	59;"	d
IPMSG_GETFILEDATA	src/ipmsg.h	57;"	d
IPMSG_GETINFO	src/ipmsg.h	51;"	d
IPMSG_GETLIST	src/ipmsg.h	41;"	d
IPMSG_GETPUBKEY	src/ipmsg.h	61;"	d
IPMSG_GETPUBKEY_LEN	src/pubcrypt.h	79;"	d
IPMSG_H	src/ipmsg.h	27;"	d
IPMSG_HOOKUP_DATA	src/private.h	53;"	d
IPMSG_INTERNAL_CODE	src/codeset.h	41;"	d
IPMSG_KEY_BTN_CHATTER_MS	src/g2ipmsg.h	60;"	d
IPMSG_MSG_MAGIC	src/message.h	31;"	d
IPMSG_MULTICASTOPT	src/ipmsg.h	76;"	d
IPMSG_NEWMUTIOPT	src/ipmsg.h	82;"	d
IPMSG_NOADDLISTOPT	src/ipmsg.h	83;"	d
IPMSG_NOLOGOPT	src/ipmsg.h	81;"	d
IPMSG_NOOPERATION	src/ipmsg.h	32;"	d
IPMSG_NOPOPUPOPT	src/ipmsg.h	77;"	d
IPMSG_NO_REPLY_OPTS	src/ipmsg.h	87;"	d
IPMSG_OKGETLIST	src/ipmsg.h	40;"	d
IPMSG_PASSWORDOPT	src/ipmsg.h	80;"	d
IPMSG_PBKDF2_H	src/pbkdf2.h	27;"	d
IPMSG_PORT	src/ipmsg.h	29;"	d
IPMSG_PRIVATE_AFCB	src/private.h	31;"	d
IPMSG_PRIVATE_DATA_MAGIC	src/private.h	28;"	d
IPMSG_PRIVATE_NO_TYPE	src/private.h	29;"	d
IPMSG_PRIVATE_PASSWD	src/private.h	32;"	d
IPMSG_PRIVATE_RECVMSG	src/private.h	30;"	d
IPMSG_PROTOCOL_ADD_WITH_HOSTLIST	src/protocol.h	133;"	d
IPMSG_PROTOCOL_ALLMSG_PACKET_FMT	src/protocol.h	87;"	d
IPMSG_PROTOCOL_BR_ABSENT_FMT	src/protocol.h	103;"	d
IPMSG_PROTOCOL_BR_ABSENT_FMT_LEN	src/protocol.h	106;"	d
IPMSG_PROTOCOL_BR_ENTRY_FMT	src/protocol.h	99;"	d
IPMSG_PROTOCOL_COMMAND_ABSENCE_TYPE	src/protocol.h	160;"	d
IPMSG_PROTOCOL_COMMAND_CRYPT_TYPE	src/protocol.h	166;"	d
IPMSG_PROTOCOL_COMMAND_ENTRY_TYPE	src/protocol.h	145;"	d
IPMSG_PROTOCOL_COMMAND_FILE_TYPE	src/protocol.h	163;"	d
IPMSG_PROTOCOL_COMMAND_HLIST_TYPE	src/protocol.h	148;"	d
IPMSG_PROTOCOL_COMMAND_INFO_TYPE	src/protocol.h	157;"	d
IPMSG_PROTOCOL_COMMAND_MASK	src/protocol.h	136;"	d
IPMSG_PROTOCOL_COMMAND_OPT_MASK	src/protocol.h	139;"	d
IPMSG_PROTOCOL_COMMAND_RECV_TYPE	src/protocol.h	154;"	d
IPMSG_PROTOCOL_COMMAND_SEND_TYPE	src/protocol.h	151;"	d
IPMSG_PROTOCOL_COMMAND_TYPE_MASK	src/protocol.h	142;"	d
IPMSG_PROTOCOL_COMMON_MSG_FMT	src/protocol.h	82;"	d
IPMSG_PROTOCOL_ENTRY_PKT_ADDR	src/protocol.h	61;"	d
IPMSG_PROTOCOL_GETINFO_TYPE	src/protocol.h	117;"	d
IPMSG_PROTOCOL_INFOMSG_TYPE	src/protocol.h	114;"	d
IPMSG_PROTOCOL_MSG_EXT_DELIM	src/protocol.h	91;"	d
IPMSG_PROTOCOL_MSG_EXT_DELIM_SYM	src/protocol.h	95;"	d
IPMSG_PROTOCOL_MSG_NONEED_PKTNO	src/protocol.h	76;"	d
IPMSG_PROTOCOL_MSG_NO_EXTENSION	src/protocol.h	71;"	d
IPMSG_PROTOCOL_MSG_NO_MESSAGE	src/protocol.h	66;"	d
IPMSG_PROTOCOL_PKTNUM_AUTO	src/protocol.h	49;"	d
IPMSG_PROTOCOL_PKTNUM_FMT	src/protocol.h	56;"	d
IPMSG_PROTOCOL_PKTNUM_LEN	src/protocol.h	53;"	d
IPMSG_PROTOCOL_SENDINFO_FMT	src/protocol.h	109;"	d
IPMSG_PROTOCOL_USR_ADD	src/protocol.h	124;"	d
IPMSG_PROTOCOL_USR_DEL	src/protocol.h	130;"	d
IPMSG_PROTOCOL_USR_NOP	src/protocol.h	121;"	d
IPMSG_PROTOCOL_USR_UPDATE	src/protocol.h	127;"	d
IPMSG_PROTO_CODE	src/codeset.h	49;"	d
IPMSG_RC2_128	src/ipmsg.h	94;"	d
IPMSG_RC2_128ALL	src/ipmsg.h	110;"	d
IPMSG_RC2_128OLD	src/ipmsg.h	107;"	d
IPMSG_RC2_256	src/ipmsg.h	95;"	d
IPMSG_RC2_40	src/ipmsg.h	93;"	d
IPMSG_RC2_40ALL	src/ipmsg.h	109;"	d
IPMSG_RC2_40OLD	src/ipmsg.h	106;"	d
IPMSG_READCHECKOPT	src/ipmsg.h	84;"	d
IPMSG_READMSG	src/ipmsg.h	47;"	d
IPMSG_RECVMSG	src/ipmsg.h	46;"	d
IPMSG_RELEASEFILES	src/ipmsg.h	58;"	d
IPMSG_RETRYOPT	src/ipmsg.h	79;"	d
IPMSG_RSA_1024	src/ipmsg.h	91;"	d
IPMSG_RSA_2048	src/ipmsg.h	92;"	d
IPMSG_RSA_512	src/ipmsg.h	90;"	d
IPMSG_SECRETEXOPT	src/ipmsg.h	85;"	d
IPMSG_SECRETOPT	src/ipmsg.h	74;"	d
IPMSG_SENDABSENCEINFO	src/ipmsg.h	55;"	d
IPMSG_SENDCHECKOPT	src/ipmsg.h	73;"	d
IPMSG_SENDINFO	src/ipmsg.h	52;"	d
IPMSG_SENDMSG	src/ipmsg.h	45;"	d
IPMSG_SERVEROPT	src/ipmsg.h	66;"	d
IPMSG_SIGN_MD5	src/ipmsg.h	102;"	d
IPMSG_SIGN_SHA1	src/ipmsg.h	103;"	d
IPMSG_SIGN_STAMPOPT	src/ipmsg.h	101;"	d
IPMSG_TCP_H	src/tcp.h	27;"	d
IPMSG_TYPES_H	src/ipmsg_types.h	27;"	d
IPMSG_UNKNWON_FATTR	src/fileattach.c	30;"	d	file:
IPMSG_UTF8OPT	src/ipmsg.h	70;"	d
IPMSG_VERSION	src/ipmsg.h	28;"	d
IPMSG_WINIPMSG_PROTO_CODE	src/codeset.h	45;"	d
LOGFILE_END_HEADER	src/logfile.h	30;"	d
LOGFILE_FMT	src/logfile.h	33;"	d
LOGFILE_FROM_STR	src/logfile.h	35;"	d
LOGFILE_H	src/logfile.h	27;"	d
LOGFILE_MAX_LINE_LEN	src/logfile.h	32;"	d
LOGFILE_NEW_LINE	src/logfile.h	31;"	d
LOGFILE_SND_HLIST_STR	src/logfile.h	36;"	d
LOGFILE_START_HEADER	src/logfile.h	29;"	d
LOGFILE_TO_STR	src/logfile.h	34;"	d
MAX_VIEW_ID	src/uicommon.h	37;"	d
MD5SHA1_DIGEST_LEN	src/pubcrypt.h	76;"	d
MD5_DIGEST_LEN	src/pubcrypt.h	70;"	d
MENU_H	src/menu.h	27;"	d
MESSAGE_H	src/message.h	27;"	d
MSGOUT_H	src/msgout.h	27;"	d
MSG_INFO_H	src/msginfo.h	27;"	d
MSG_INFO_MAX_RETRY	src/msginfo.h	34;"	d
MSG_INFO_RETRY_INTERVAL	src/msginfo.h	35;"	d
MSG_WATCH_INTERVAL	src/g2ipmsg.h	53;"	d
NAME_LEN	src/message.h	32;"	d
NETCOMMON_H	src/netcommon.h	27;"	d
NET_MAX_RETRY	src/netcommon.h	30;"	d
PATH	src/hostinfo.h	32;"	d
PBKDF2_FORMAT	src/pbkdf2.h	39;"	d
PBKDF2_FORMAT_ADDED_LEN	src/pbkdf2.h	41;"	d
PBKDF2_ITER_CNT	src/pbkdf2.h	42;"	d
PBKDF2_KEY_LEN	src/pbkdf2.h	37;"	d
PBKDF2_PREFIX	src/pbkdf2.h	38;"	d
PBKDF2_PREFIX_LEN	src/pbkdf2.h	40;"	d
PBKDF2_PRF_OUT_LEN	src/pbkdf2.h	35;"	d
PBKDF2_SALT_LEN	src/pbkdf2.h	36;"	d
PRIVATE_H	src/private.h	27;"	d
PROTOCOL_H	src/protocol.h	29;"	d
PUBKEY_MAX_RETRY	src/cryptcommon.h	88;"	d
PUBKEY_WAIT_MICRO_SEC	src/cryptcommon.h	82;"	d
Q_	src/support.h	11;"	d
Q_	src/support.h	13;"	d
Q_	src/support.h	15;"	d
RC2_CAPS	src/symcrypt.h	48;"	d
RSA_CAPS	src/pubcrypt.h	114;"	d
RSA_CAPS	src/pubcrypt.h	64;"	d
RSA_DIR_INVALID_FLAGS	src/pubcrypt.h	83;"	d
RSA_KEYGEN_RETRY	src/pubcrypt.h	49;"	d
RSA_KEY_INDEX_1024	src/pubcrypt.h	55;"	d
RSA_KEY_INDEX_2048	src/pubcrypt.h	52;"	d
RSA_KEY_INDEX_512	src/pubcrypt.h	58;"	d
RSA_KEY_MAX	src/pubcrypt.h	61;"	d
RSA_PRIVKEY_FNAME_PREFIX	src/pubcrypt.h	86;"	d
RSA_PUBKEY_FNAME_PREFIX	src/pubcrypt.h	89;"	d
SCREEN_SAVER_DBUS_IF	src/screensaver.c	39;"	d	file:
SCREEN_SAVER_DBUS_OBJ_PATH	src/screensaver.c	38;"	d	file:
SCREEN_SAVER_DBUS_SERVICE	src/screensaver.c	37;"	d	file:
SCREEN_SAVER_GETACTIVATE_MSG	src/screensaver.c	40;"	d	file:
SHA1_DIGEST_LEN	src/pubcrypt.h	73;"	d
SIGN_CAPS	src/pubcrypt.h	117;"	d
SIGN_CAPS	src/pubcrypt.h	67;"	d
SORT_TYPE_IPADDR	src/hostinfo.h	91;"	d
SORT_TYPE_MACHINE	src/hostinfo.h	90;"	d
SORT_TYPE_USER	src/hostinfo.h	89;"	d
STATUS_ICON_WAIT_MICRO_SEC	src/g2ipmsg.h	45;"	d
SYMCRYPT_MAX_KEY_TYPE	src/symcrypt.h	45;"	d
SYM_CAPS	src/symcrypt.h	57;"	d
SYM_CAPS	src/symcrypt.h	73;"	d
SYSTRAY_H	src/systray.h	27;"	d
TCP_CLIENT_TMOUT_MS	src/tcp.h	37;"	d
TCP_CLOSE_WAIT_SEC	src/tcp.h	38;"	d
TCP_DOWNLOAD_RETRY	src/tcp.h	34;"	d
TCP_FILE_BUFSIZ	src/g2ipmsg.h	105;"	d
TCP_FLUSH_RETRY	src/tcp.h	35;"	d
TCP_LISTEN_LEN	src/tcp.h	33;"	d
TCP_SELECT_SEC	src/tcp.h	36;"	d
UDP_H	src/udp.h	27;"	d
UICOMMON_DIALOG_DELIM	src/uicommon.h	39;"	d
UI_COMMON_H	src/uicommon.h	27;"	d
USERDB_H	src/userdb.h	27;"	d
USERLIST_DEFAULT_PRIO	src/g2ipmsg.h	67;"	d
USERLIST_PRIO_MAX	src/g2ipmsg.h	70;"	d
USERLIST_PRIO_MIN	src/g2ipmsg.h	64;"	d
USER_VIEW_GROUP_ID	src/uicommon.h	32;"	d
USER_VIEW_HOST_ID	src/uicommon.h	33;"	d
USER_VIEW_IPADDR_ID	src/uicommon.h	34;"	d
USER_VIEW_LOGON_ID	src/uicommon.h	35;"	d
USER_VIEW_NICKNAME_ID	src/uicommon.h	31;"	d
USER_VIEW_PRIO_ID	src/uicommon.h	36;"	d
WAIT_FOR_READ	src/netcommon.h	28;"	d
WAIT_FOR_WRITE	src/netcommon.h	29;"	d
WAIT_UNIT_MS	src/netcommon.h	31;"	d
_MSG_BUF_MIN_SIZE	src/g2ipmsg.h	93;"	d
_MSG_BUF_SIZE	src/g2ipmsg.h	89;"	d
_TCP_BUF_MIN_SIZE	src/g2ipmsg.h	102;"	d
_TCP_BUF_SIZE	src/g2ipmsg.h	98;"	d
_assert	src/msgout.h	61;"	d
_attach_file_block	src/fileattach.h	/^typedef struct _attach_file_block{$/;"	s
_dbus_con_t	src/dbusif.h	/^typedef struct _dbus_con_t{$/;"	s
_dir_request	src/downloads.h	/^typedef struct _dir_request{$/;"	s
_download_file_info	src/fileattach.h	/^typedef struct _download_file_info{ \/* ダウンロードファイル情報 *\/$/;"	s
_file_info	src/fileattach.h	/^typedef struct _file_info{$/;"	s
_ipmsg_private_data	src/private.h	/^typedef struct _ipmsg_private_data{$/;"	s
_ipmsg_recvmsg_private	src/private.h	/^typedef struct _ipmsg_recvmsg_private{$/;"	s
_message_info	src/msginfo.h	/^typedef struct _message_info{$/;"	s
_msg_data	src/message.h	/^typedef struct _msg_data{$/;"	s
_request_msg	src/tcp.h	/^typedef struct _request_msg{$/;"	s
_send_info	src/msginfo.h	/^typedef struct _send_info{$/;"	s
_tcp_con	src/tcp.h	/^typedef struct _tcp_con{$/;"	s
_tcp_dsend_pkt	src/tcp.h	/^typedef struct _tcp_dsend_pkt{$/;"	s
_udp_con	src/udp.h	/^typedef struct _udp_con{$/;"	s
_userdb	src/userdb.h	/^typedef struct _userdb{$/;"	s
absent_id	src/hostinfo.c	/^static int absent_id=-1;$/;"	v	file:
add_attach_file	src/fileattach.c	/^add_attach_file(attach_file_block_t *afcb,const gchar *path){$/;"	f
add_timing_entropy	src/rand.c	/^add_timing_entropy(void) {$/;"	f
add_upload_queue	src/fileattach.c	/^add_upload_queue(pktno_t pktno,attach_file_block_t *afcb) {$/;"	f
add_with_userdb_entry	src/userdb.c	/^add_with_userdb_entry(userdb_t *new_user){$/;"	f	file:
aes_cbc_decrypt_setup	src/symcrypt.c	/^aes_cbc_decrypt_setup(const char *key, const size_t key_len_byte, const char *iv, $/;"	f
aes_cbc_encrypt_setup	src/symcrypt.c	/^aes_cbc_encrypt_setup(const char *key, const size_t key_len_byte, $/;"	f
afcb_get_username	src/fileattach.c	/^afcb_get_username(attach_file_block_t *afcb, gchar **string){$/;"	f	file:
alloc_udp_connection	src/udp.c	/^alloc_udp_connection(udp_con_t **con_p) {$/;"	f
alloc_user_info	src/userdb.c	/^alloc_user_info(userdb_t **entry){$/;"	f	file:
append_displayed_window	src/recvmsg.c	/^append_displayed_window(GtkWindow *window) {$/;"	f
append_opened_window	src/recvmsg.c	/^append_opened_window(GtkWindow *window) {$/;"	f
applet_event_button_press_event	src/applet.c	/^applet_event_button_press_event (GtkWidget       *widget,$/;"	f	file:
applet_p	src/applet.c	/^static GtkWidget *applet_p=NULL;$/;"	v	file:
apply_crypt_config_window	src/uicommon.c	/^apply_crypt_config_window(GtkWindow *configWindow){$/;"	f
as_func_failure	configure	/^as_func_failure () {$/;"	f
as_func_ret_failure	configure	/^as_func_ret_failure () {$/;"	f
as_func_ret_success	configure	/^as_func_ret_success () {$/;"	f
as_func_success	configure	/^as_func_success () {$/;"	f
attach_file_block_t	src/fileattach.h	/^}attach_file_block_t;$/;"	t	typeref:struct:_attach_file_block
attachment_editor	src/msginfo.h	/^  GtkWidget *attachment_editor;$/;"	m	struct:_send_info
base64_decode	src/base64.c	/^base64_decode(const guchar *data,size_t *len,gchar **output){$/;"	f
base64_decode_table	src/base64.c	/^static const unsigned char base64_decode_table[256] = {$/;"	v	file:
base64_encode	src/base64.c	/^base64_encode(const guchar *data,size_t len,gchar **output){$/;"	f
base64_encode_table	src/base64.c	/^static char base64_encode_table[64] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/";$/;"	v	file:
blowfish_cbc_decrypt_setup	src/symcrypt.c	/^blowfish_cbc_decrypt_setup(const char *key, const size_t key_len_byte, const char *iv, $/;"	f
blowfish_cbc_encrypt_setup	src/symcrypt.c	/^blowfish_cbc_encrypt_setup(const char *key, const size_t key_len_byte, const char *iv, $/;"	f
build_ipmsg_packet	src/protocol.c	/^build_ipmsg_packet(const char *ipaddr, const pktno_t pkt_arg, $/;"	f	file:
bus	src/dbusif.h	/^  DBusGConnection *bus;$/;"	m	struct:_dbus_con_t
cached_prio	src/hostinfo.c	/^static GSList *cached_prio;$/;"	v	file:
can_sound	src/sound.c	/^gboolean can_sound=FALSE;$/;"	v
cap	src/userdb.h	/^  unsigned long cap; \/*  端末ケイパビリティ(エントリパケットのフラグ)  *\/$/;"	m	struct:_userdb
check_duplicate_attach	src/fileattach.c	/^check_duplicate_attach(gconstpointer a,gconstpointer b){$/;"	f	file:
check_end_condition	src/downloads.c	/^check_end_condition(const char *top_dir, const char *current_dir, gboolean *is_cont){$/;"	f	file:
check_random_seed	src/rand.c	/^check_random_seed(void){$/;"	f	file:
check_screensaver_active	src/screensaver.c	/^check_screensaver_active(gboolean *state_p) {$/;"	f
check_secure_directory	src/pubcrypt.c	/^check_secure_directory(const unsigned char *dir) {$/;"	f	file:
check_valid_encoding	src/codeset.c	/^check_valid_encoding(const char *encoding) {$/;"	f	file:
cite_string	src/hostinfo.c	/^static gchar *cite_string=NULL;$/;"	v	file:
cleanup_ipmsg	src/ipmsg.c	/^cleanup_ipmsg(void){$/;"	f
cleanup_message_watcher	src/recvmsg.c	/^cleanup_message_watcher(void){$/;"	f
cleanup_sound_system	src/sound.c	/^cleanup_sound_system(void){$/;"	f
client	src/hostinfo.c	/^static GConfClient *client=NULL;$/;"	v	file:
client_info_add_text	src/dialog.c	/^client_info_add_text(GtkTextBuffer *text_buffer, const char *format,...){$/;"	f	file:
command	src/message.h	/^  int command;$/;"	m	struct:_msg_data
command_opts	src/message.h	/^  int command_opts;$/;"	m	struct:_msg_data
common_cbc_decrypt	src/symcrypt.c	/^common_cbc_decrypt(EVP_CIPHER_CTX *ctx, const char *ct, const int inl, char **ret_buff, size_t *outl) {$/;"	f
common_cbc_encrypt	src/symcrypt.c	/^common_cbc_encrypt(EVP_CIPHER_CTX *ctx, const char *data, const int inl, char **ret_buff, size_t *rb_len) {$/;"	f
common_cbc_finalize	src/symcrypt.c	/^common_cbc_finalize(EVP_CIPHER_CTX **ctx_p) {$/;"	f
compat_base64_decode	src/base64.c	/^compat_base64_decode(unsigned char *in, size_t *out_len){$/;"	f	file:
compat_base64_encode	src/base64.c	/^compat_base64_encode(const guchar *data,gsize len){$/;"	f	file:
con	src/ipmsg.c	/^static udp_con_t con;$/;"	v	file:
con	src/msginfo.h	/^  udp_con_t *con;$/;"	m	struct:_message_info
con	src/tcp.h	/^  tcp_con_t *con;$/;"	m	struct:_tcp_dsend_pkt
con_list	src/udp.c	/^GList *con_list = NULL;$/;"	v
confirm_file_existence	src/logfile.c	/^confirm_file_existence(void){$/;"	f	file:
conv	src/sound.c	/^GstElement *pipeline, *source, *parser, *decoder, *conv, *sink;$/;"	v
convert_mutex	src/codeset.c	/^GStaticMutex convert_mutex = G_STATIC_MUTEX_INIT;$/;"	v
convert_peer_key	src/pubcrypt.c	/^convert_peer_key(const char *peer_e,const char *peer_n,RSA **rsa){$/;"	f	file:
convert_string_internal	src/codeset.c	/^convert_string_internal(const char *string, const gchar **to_string) {$/;"	f
copy_user_info	src/userdb.c	/^copy_user_info(userdb_t *dest,userdb_t *src) {$/;"	f	file:
count	src/fileattach.h	/^  guint count;$/;"	m	struct:_attach_file_block
create_DownloadConfirmDialog	src/interface.c	/^create_DownloadConfirmDialog (void)$/;"	f
create_aboutdialog	src/interface.c	/^create_aboutdialog (void)$/;"	f
create_absenceEditor	src/interface.c	/^create_absenceEditor (void)$/;"	f
create_attachFileEditor	src/interface.c	/^create_attachFileEditor (void)$/;"	f
create_attach_file_block	src/fileattach.c	/^create_attach_file_block(attach_file_block_t **afcb){$/;"	f
create_clientInfoWindow	src/interface.c	/^create_clientInfoWindow (void)$/;"	f
create_configWindow1	src/interface.c	/^create_configWindow1 (void)$/;"	f
create_downLoadFailDialog	src/interface.c	/^create_downLoadFailDialog (void)$/;"	f
create_downloadDialog	src/interface.c	/^create_downloadDialog (void)$/;"	f
create_downloadMonitor	src/interface.c	/^create_downloadMonitor (void)$/;"	f
create_downloadOpenDirOnlydialog	src/interface.c	/^create_downloadOpenDirOnlydialog (void)$/;"	f
create_downloadWindow	src/interface.c	/^create_downloadWindow (void)$/;"	f
create_downloadfilechooserdialog	src/interface.c	/^create_downloadfilechooserdialog (void)$/;"	f
create_errorDialog	src/interface.c	/^create_errorDialog (void)$/;"	f
create_file_info	src/fileattach.c	/^create_file_info(file_info_t **file_info) {$/;"	f	file:
create_fuzai_menu	src/menu.c	/^create_fuzai_menu(void){$/;"	f	file:
create_group_menu	src/uicommon.c	/^create_group_menu(GtkWidget *window) {$/;"	f	file:
create_initialWindow	src/interface.c	/^create_initialWindow (void)$/;"	f
create_ipmsgDownloadOverWrite	src/interface.c	/^create_ipmsgDownloadOverWrite (void)$/;"	f
create_ipmsg_status_icon	src/systray.c	/^create_ipmsg_status_icon(void){$/;"	f
create_lock_file	src/ipmsg.c	/^create_lock_file(void){$/;"	f
create_logfileChooserdialog	src/interface.c	/^create_logfileChooserdialog (void)$/;"	f
create_main_menu	src/menu.c	/^create_main_menu(void){$/;"	f
create_menu_item	src/menu.c	/^create_menu_item(const char *name,const char *label,gpointer data,$/;"	f
create_menu_separator	src/menu.c	/^create_menu_separator(const char *name){$/;"	f	file:
create_messageWindow	src/interface.c	/^create_messageWindow (void)$/;"	f
create_one_file_string	src/fileattach.c	/^create_one_file_string(file_info_t *info,const gchar **string){$/;"	f	file:
create_parent_dir	src/downloads.c	/^create_parent_dir(const char *current_dir,char **parent){$/;"	f	file:
create_passwdDialog	src/interface.c	/^create_passwdDialog (void)$/;"	f
create_passwdWindow	src/interface.c	/^create_passwdWindow (void)$/;"	f
create_pixbuf	src/support.c	/^create_pixbuf                          (const gchar     *filename)$/;"	f
create_pixmap	src/support.c	/^create_pixmap                          (GtkWidget       *widget,$/;"	f
create_readNotifyDialog	src/interface.c	/^create_readNotifyDialog (void)$/;"	f
create_response	src/tcp.c	/^create_response(unsigned long type,const char *name,const size_t size,const char *dir,char **response){$/;"	f	file:
create_securityConfig	src/interface.c	/^create_securityConfig (void)$/;"	f
create_sendFailDialog	src/interface.c	/^create_sendFailDialog (void)$/;"	f
create_stock_menu_item	src/menu.c	/^create_stock_menu_item(const char *name,const gchar *stock_id,gpointer data,$/;"	f	file:
create_user_view_column	src/uicommon.c	/^create_user_view_column(int id,const char *title, GCallback callback){$/;"	f	file:
create_userlistPopUpMenu	src/interface.c	/^create_userlistPopUpMenu (void)$/;"	f
create_viewConfigWindow	src/interface.c	/^create_viewConfigWindow (void)$/;"	f
create_viewWindow	src/interface.c	/^create_viewWindow (void)$/;"	f
crypt_cap	src/userdb.h	/^  unsigned long crypt_cap; \/*  端末ケイパビリティ(エントリパケットのフラグ)  *\/$/;"	m	struct:_userdb
current_absent_state	src/hostinfo.c	/^static gboolean current_absent_state=FALSE;$/;"	v	file:
data	src/private.h	/^  void *data;$/;"	m	struct:_ipmsg_private_data
dbg_out	src/msgout.h	31;"	d
dbg_out	src/msgout.h	37;"	d
dbus_con_t	src/dbusif.h	/^}dbus_con_t;$/;"	t	typeref:struct:_dbus_con_t
decoder	src/sound.c	/^GstElement *pipeline, *source, *parser, *decoder, *conv, *sink;$/;"	v
default_message_watcher	src/recvmsg.c	/^default_message_watcher(GtkWidget *window,gboolean is_normal) {$/;"	f	file:
destroy_all_opened_windows	src/recvmsg.c	/^destroy_all_opened_windows(void) {$/;"	f
destroy_attach_file_block	src/fileattach.c	/^destroy_attach_file_block(attach_file_block_t **afcb){$/;"	f
destroy_download_file_info	src/fileattach.c	/^destroy_download_file_info(download_file_block_t **ret_info) {$/;"	f	file:
destroy_download_list	src/fileattach.c	/^destroy_download_list(const GList **download_list) {$/;"	f
destroy_file_info	src/fileattach.c	/^destroy_file_info(file_info_t *file_info) {$/;"	f	file:
destroy_ipmsg_private	src/recvmsg.c	/^destroy_ipmsg_private(gpointer data) {$/;"	f
destroy_recvmsg_private	src/recvmsg.c	/^destroy_recvmsg_private(ipmsg_private_data_t *private) {$/;"	f	file:
destroy_tcp_connection	src/tcp.c	/^destroy_tcp_connection(tcp_con_t *con) {$/;"	f	file:
destroy_user_info	src/userdb.c	/^destroy_user_info(userdb_t *entry){$/;"	f
destroy_user_info_contents	src/userdb.c	/^destroy_user_info_contents(userdb_t *entry){$/;"	f	file:
dfcb_ref	src/fileattach.h	/^  download_file_block_t *dfcb_ref;$/;"	m	struct:_file_info
dir_check_mutex	src/pubcrypt.c	/^GStaticMutex  dir_check_mutex = G_STATIC_MUTEX_INIT;$/;"	v
dir_request_t	src/downloads.h	/^}dir_request_t;$/;"	t	typeref:struct:_dir_request
disable_pipe_signal	src/tcp.c	/^disable_pipe_signal(struct sigaction *saved_act){$/;"	f
displayed_wins	src/recvmsg.c	/^static GList *displayed_wins=NULL;$/;"	v	file:
displayedwin_mutex	src/recvmsg.c	/^GStaticMutex displayedwin_mutex = G_STATIC_MUTEX_INIT;$/;"	v
do_download	src/downloads.c	/^do_download(GtkTreeModel *model,$/;"	f
do_download_directory	src/downloads.c	/^do_download_directory(tcp_con_t *con, const char *top_dir,GtkTreeModel *model,GtkTreeIter *iter){$/;"	f
do_download_regular_file	src/downloads.c	/^do_download_regular_file(tcp_con_t *con, const char *filepath, off_t file_size, off_t *written, GtkTreeModel *model, GtkTreeIter *iter){$/;"	f
do_get_client_info	src/callbacks.c	/^do_get_client_info(GtkTreeModel *model,$/;"	f	file:
do_notify_change	src/userdb.c	/^do_notify_change(gpointer data,gpointer user_data) {$/;"	f	file:
do_send	src/callbacks.c	/^do_send(GtkTreeModel *model, GtkTreePath *path, GtkTreeIter *iter, $/;"	f	file:
do_update_monitor_win	src/menu.c	/^do_update_monitor_win(gpointer data,gpointer user_data) {$/;"	f	file:
download_base_cmd	src/downloads.h	42;"	d
download_dir_open_operation	src/downloads.c	/^download_dir_open_operation(const char *dir){$/;"	f
download_file_block_t	src/fileattach.h	/^}download_file_block_t;$/;"	t	typeref:struct:_download_file_info
download_file_failed_operation	src/downloads.c	/^download_file_failed_operation(const char *filepath, const char *basename){$/;"	f
download_file_ok_operation	src/downloads.c	/^download_file_ok_operation(const char *file,const char *filepath, off_t size,const char *dir){$/;"	f
download_monitor_add_waiter_window	src/menu.c	/^download_monitor_add_waiter_window(GtkWidget *window){$/;"	f
download_monitor_delete_btn_action	src/menu.c	/^download_monitor_delete_btn_action(GtkButton       *button,$/;"	f
download_monitor_refer_file	src/menu.c	/^download_monitor_refer_file(const  pktno,int fileid,unsigned long *ipmsg_fattr,const char **path, off_t *size){$/;"	f
download_monitor_release_file	src/menu.c	/^download_monitor_release_file(const pktno_t pktno,int fileid){$/;"	f
download_monitor_remove_waiter_window	src/menu.c	/^download_monitor_remove_waiter_window(GtkWidget *window){$/;"	f
download_monitor_update_state	src/menu.c	/^download_monitor_update_state(void){$/;"	f
download_overwrite_confirm_generic	src/downloads.c	/^download_overwrite_confirm_generic(const char *filepath){$/;"	f
download_queue_mutex	src/fileattach.c	/^GStaticMutex download_queue_mutex = G_STATIC_MUTEX_INIT;$/;"	v
downloads	src/fileattach.c	/^GList *downloads=NULL;$/;"	v
ed_msg_string	src/msginfo.h	/^  gchar *ed_msg_string; \/*  外部形式で表した送信伝文(のコピー)  *\/$/;"	m	struct:_message_info
edit1_menu_uiinfo	src/interface.c	/^static GnomeUIInfo edit1_menu_uiinfo[] =$/;"	v	file:
elapsed_time	src/callbacks.c	/^elapsed_time(struct timeval *old,struct timeval *new,struct timeval *elaps){$/;"	f	file:
emulate_chdir	src/downloads.c	/^emulate_chdir(const char *current_dir,char *subdir,char **new_dir){$/;"	f	file:
enable_pipe_signal	src/tcp.c	/^enable_pipe_signal(struct sigaction *saved_act){$/;"	f
encoding_string	src/hostinfo.c	/^static gchar *encoding_string = NULL;$/;"	v	file:
enter_password	src/cryptif.c	/^enter_password(void) {$/;"	f
err_out	src/msgout.h	53;"	d
error_message_dialog	src/dialog.c	/^error_message_dialog(gboolean is_mordal, const char *filename, const char *funcname, $/;"	f
ext_part	src/private.h	/^  char  *ext_part;$/;"	m	struct:_ipmsg_recvmsg_private
extstring	src/message.h	/^  char *extstring;$/;"	m	struct:_msg_data
family	src/tcp.h	/^  int family;$/;"	m	struct:_tcp_con
family	src/udp.h	/^  int family;$/;"	m	struct:_udp_con
file1_menu_uiinfo	src/interface.c	/^static GnomeUIInfo file1_menu_uiinfo[] =$/;"	v	file:
file_check_mutex	src/pubcrypt.c	/^GStaticMutex file_check_mutex = G_STATIC_MUTEX_INIT;$/;"	v
file_info_t	src/fileattach.h	/^}file_info_t;$/;"	t	typeref:struct:_file_info
file_size	src/downloads.h	/^  off_t file_size;$/;"	m	struct:_dir_request
fileid	src/fileattach.h	/^  int fileid;$/;"	m	struct:_download_file_info
fileid	src/fileattach.h	/^  int fileid;$/;"	m	struct:_file_info
fileid	src/tcp.h	/^  int fileid;$/;"	m	struct:_request_msg
filename	src/downloads.h	/^  gchar *filename;$/;"	m	struct:_dir_request
filename	src/fileattach.h	/^  gchar *filename;  $/;"	m	struct:_download_file_info
filename	src/fileattach.h	/^  gchar *filename;$/;"	m	struct:_file_info
filepath	src/fileattach.h	/^  gchar *filepath;$/;"	m	struct:_file_info
files	src/fileattach.h	/^  GList *files;  \/*ファイル情報*\/$/;"	m	struct:_attach_file_block
fill_user_info_with_message	src/userdb.c	/^fill_user_info_with_message(const udp_con_t *con, const msg_data_t *msg, userdb_t *new_user){$/;"	f	file:
finalize_send_directory	src/tcp.c	/^finalize_send_directory(tcp_con_t *con,const char *top_dir,GnomeVFSFileInfo *info){$/;"	f	file:
find_attach_file_block	src/fileattach.c	/^find_attach_file_block(gconstpointer a,gconstpointer b){$/;"	f	file:
find_attach_file_info	src/fileattach.c	/^find_attach_file_info(gconstpointer a,gconstpointer b){$/;"	f	file:
first	src/msginfo.h	/^  gboolean first;$/;"	m	struct:_message_info
flags	src/msginfo.h	/^  int flags;$/;"	m	struct:_send_info
flags	src/private.h	/^  int       flags;$/;"	m	struct:_ipmsg_recvmsg_private
free_message_entry	src/msginfo.c	/^free_message_entry(GList *entry){$/;"	f	file:
free_udp_con_data	src/udp.c	/^free_udp_con_data(udp_con_t **con_p) {$/;"	f
free_udp_con_node	src/udp.c	/^free_udp_con_node(gpointer data, gpointer user_data) {$/;"	f	file:
free_udp_conlist	src/udp.c	/^free_udp_conlist(void) {$/;"	f
func_extract_an_archive	ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	ltmain.sh	/^func_extract_archives ()$/;"	f
func_infer_tag	ltmain.sh	/^func_infer_tag ()$/;"	f
func_mktempdir	ltmain.sh	/^func_mktempdir ()$/;"	f
func_win32_libid	ltmain.sh	/^func_win32_libid ()$/;"	f
g2ipmsg_applet_about_cb	src/applet.c	/^g2ipmsg_applet_about_cb (BonoboUIComponent *uic,$/;"	f	file:
g2ipmsg_applet_destroy_cb	src/applet.c	/^g2ipmsg_applet_destroy_cb (BonoboUIComponent *uic,$/;"	f	file:
g2ipmsg_applet_download_cb	src/applet.c	/^g2ipmsg_applet_download_cb (BonoboUIComponent *uic,$/;"	f	file:
g2ipmsg_applet_fill	src/applet.c	/^g2ipmsg_applet_fill (PanelApplet *applet,$/;"	f	file:
g2ipmsg_applet_foreground_window_cb	src/applet.c	/^g2ipmsg_applet_foreground_window_cb (BonoboUIComponent *uic,$/;"	f	file:
g2ipmsg_applet_fuzai_cb	src/applet.c	/^g2ipmsg_applet_fuzai_cb (BonoboUIComponent *uic,$/;"	f	file:
g2ipmsg_applet_menu_verbs	src/applet.c	/^static const BonoboUIVerb g2ipmsg_applet_menu_verbs[] = {$/;"	v	file:
g2ipmsg_applet_new_message_cb	src/applet.c	/^g2ipmsg_applet_new_message_cb (BonoboUIComponent *uic,$/;"	f	file:
g2ipmsg_applet_preferences_cb	src/applet.c	/^g2ipmsg_applet_preferences_cb (BonoboUIComponent *uic,$/;"	f	file:
g2ipmsg_applet_remove_window_cb	src/applet.c	/^g2ipmsg_applet_remove_window_cb (BonoboUIComponent *uic,$/;"	f	file:
g2ipmsg_applet_security_preferences_cb	src/applet.c	/^g2ipmsg_applet_security_preferences_cb(BonoboUIComponent *uic,$/;"	f	file:
g2ipmsg_applet_showlog_cb	src/applet.c	/^g2ipmsg_applet_showlog_cb (BonoboUIComponent *uic,$/;"	f	file:
g2ipmsg_applet_zaiseki_cb	src/applet.c	/^g2ipmsg_applet_zaiseki_cb (BonoboUIComponent *uic,$/;"	f	file:
g2ipmsg_main	src/main.c	/^g2ipmsg_main (int argc, char *argv[])$/;"	f	file:
g2ipmsg_start_btn_update_tooltips	src/applet.c	/^g2ipmsg_start_btn_update_tooltips (int num)$/;"	f
g_slice_free	src/compat.h	38;"	d
g_slice_new	src/compat.h	37;"	d
generate_rand	src/rand.c	/^generate_rand(unsigned char *buf,size_t len){$/;"	f
generate_rsa_key	src/pubcrypt.c	/^generate_rsa_key(RSA **rsa_p, ipmsg_cap_t key_type) {$/;"	f	file:
get_asymkey_part	src/cryptcommon.h	73;"	d
get_attach_file_extention	src/fileattach.c	/^get_attach_file_extention(attach_file_block_t *afcb,const gchar **ext_string){$/;"	f
get_command_from_msg	src/message.c	/^get_command_from_msg(const msg_data_t *msg, unsigned long *command, unsigned long *command_opts) {$/;"	f
get_current_group_index	src/callbacks.c	/^get_current_group_index(GtkComboBox *combobox) {$/;"	f	file:
get_current_time_string	src/util.c	/^get_current_time_string(char time_string[], long sec) {$/;"	f
get_envval	src/util.c	/^get_envval(const char *var, char **val_p) {$/;"	f
get_file_info	src/fileattach.c	/^get_file_info(const gchar *path, off_t *size, time_t *mtime, ipmsg_ftype_t *ipmsg_type) {$/;"	f
get_file_type_name	src/fileattach.c	/^get_file_type_name(unsigned long fattr) {$/;"	f
get_filename_list	src/fileattach.c	/^get_filename_list(attach_file_block_t *afcb, gchar **string){$/;"	f	file:
get_group_index	src/callbacks.c	/^get_group_index(GtkComboBox *combobox, const gchar *groupname, int *index) {$/;"	f	file:
get_group_list	src/userdb.c	/^get_group_list(void){$/;"	f
get_hexstr_index	src/cryptif.c	/^get_hexstr_index(const char ch, char *index){$/;"	f	file:
get_one_download_file_info	src/fileattach.c	/^get_one_download_file_info(const gchar *string,download_file_block_t **new_info_ref){$/;"	f	file:
get_rsa_key_index	src/pubcrypt.c	/^get_rsa_key_index(const ipmsg_cap_t cap, int *indp){$/;"	f	file:
get_sign_part	src/cryptcommon.h	78;"	d
get_symkey_part	src/cryptcommon.h	68;"	d
glade_set_atk_action_description	src/support.c	/^glade_set_atk_action_description       (AtkAction       *action,$/;"	f
group	src/userdb.h	/^  gchar *group;$/;"	m	struct:_userdb
groupname	src/hostinfo.c	/^static gchar *groupname=NULL;$/;"	v	file:
handle	src/logfile.c	/^static int handle=-1;$/;"	v	file:
handle_attachment_drag_data	src/callbacks.c	/^handle_attachment_drag_data(GtkSelectionData *data,GtkWidget *attachment_editor){$/;"	f	file:
has_dupulicated_string_in_cell	src/callbacks.c	/^has_dupulicated_string_in_cell(const char *string,GtkTreeView *treeview){$/;"	f	file:
header_size	src/downloads.h	/^  long header_size;$/;"	m	struct:_dir_request
help1_menu_uiinfo	src/interface.c	/^static GnomeUIInfo help1_menu_uiinfo[] =$/;"	v	file:
hexstr	src/cryptif.c	/^static char *hexstr = "0123456789abcdef";$/;"	v	file:
host	src/userdb.h	/^  gchar *host;$/;"	m	struct:_userdb
hostinfo_cleanup_hostinfo	src/hostinfo.c	/^hostinfo_cleanup_hostinfo(void){$/;"	f
hostinfo_gconf_notify_func	src/hostinfo.c	/^hostinfo_gconf_notify_func(GConfClient *client, guint cnxn_id, GConfEntry  *entry,$/;"	f	file:
hostinfo_get_absent_id	src/hostinfo.c	/^hostinfo_get_absent_id(int *index){$/;"	f
hostinfo_get_absent_message	src/hostinfo.c	/^hostinfo_get_absent_message(int index, char **message){$/;"	f
hostinfo_get_absent_title	src/hostinfo.c	/^hostinfo_get_absent_title(int index,const char **title){$/;"	f
hostinfo_get_current_absence_message	src/hostinfo.c	/^hostinfo_get_current_absence_message(char **message_p) {$/;"	f
hostinfo_get_header_order	src/hostinfo.c	/^hostinfo_get_header_order(int index,int *col_id){$/;"	f
hostinfo_get_ipmsg_absence_editor_size	src/hostinfo.c	/^hostinfo_get_ipmsg_absence_editor_size(gint *width,gint *height){$/;"	f
hostinfo_get_ipmsg_attach_editor_size	src/hostinfo.c	/^hostinfo_get_ipmsg_attach_editor_size(gint *width,gint *height){$/;"	f
hostinfo_get_ipmsg_broadcast_list	src/hostinfo.c	/^hostinfo_get_ipmsg_broadcast_list(void){$/;"	f
hostinfo_get_ipmsg_crypt_capability	src/hostinfo.c	/^hostinfo_get_ipmsg_crypt_capability(void){$/;"	f
hostinfo_get_ipmsg_ipaddr_prio	src/hostinfo.c	/^hostinfo_get_ipmsg_ipaddr_prio(const char *ipaddr,int *prio){$/;"	f
hostinfo_get_ipmsg_message_window_size	src/hostinfo.c	/^hostinfo_get_ipmsg_message_window_size(gint *width,gint *height){$/;"	f
hostinfo_get_ipmsg_recv_window_size	src/hostinfo.c	/^hostinfo_get_ipmsg_recv_window_size(gint *width,gint *height){$/;"	f
hostinfo_get_ipmsg_system_addr_family	src/hostinfo.c	/^hostinfo_get_ipmsg_system_addr_family(void){$/;"	f
hostinfo_get_ipmsg_window_size	src/hostinfo.c	/^hostinfo_get_ipmsg_window_size(const gchar *wkey,const gchar *hkey,gint *width,gint *height){$/;"	f	file:
hostinfo_get_normal_entry_flags	src/hostinfo.c	/^hostinfo_get_normal_entry_flags(void){$/;"	f
hostinfo_get_normal_send_flags	src/hostinfo.c	/^hostinfo_get_normal_send_flags(void){$/;"	f
hostinfo_init_hostinfo	src/hostinfo.c	/^hostinfo_init_hostinfo(void){$/;"	f
hostinfo_is_ipmsg_absent	src/hostinfo.c	/^hostinfo_is_ipmsg_absent(void) {$/;"	f
hostinfo_mutex	src/hostinfo.c	/^GStaticMutex hostinfo_mutex = G_STATIC_MUTEX_INIT;$/;"	v
hostinfo_refer_absent_length	src/hostinfo.c	/^hostinfo_refer_absent_length(int *max_index){$/;"	f
hostinfo_refer_absent_message_slots	src/hostinfo.c	/^hostinfo_refer_absent_message_slots(int *max_index){$/;"	f
hostinfo_refer_debug_state	src/hostinfo.c	/^hostinfo_refer_debug_state(void) {$/;"	f
hostinfo_refer_enable_systray	src/hostinfo.c	/^hostinfo_refer_enable_systray(void){$/;"	f
hostinfo_refer_encoding	src/hostinfo.c	/^hostinfo_refer_encoding(void) {$/;"	f
hostinfo_refer_encryption_key_password	src/hostinfo.c	/^hostinfo_refer_encryption_key_password(void) {$/;"	f
hostinfo_refer_group_name	src/hostinfo.c	/^hostinfo_refer_group_name(void) {$/;"	f
hostinfo_refer_header_state	src/hostinfo.c	/^hostinfo_refer_header_state(void){$/;"	f
hostinfo_refer_host_name	src/hostinfo.c	/^hostinfo_refer_host_name(void){$/;"	f
hostinfo_refer_ipmsg_cipher	src/hostinfo.c	/^hostinfo_refer_ipmsg_cipher(unsigned long *cipher) {$/;"	f
hostinfo_refer_ipmsg_cite_string	src/hostinfo.c	/^hostinfo_refer_ipmsg_cite_string(void) {$/;"	f
hostinfo_refer_ipmsg_crypt_policy_is_speed	src/hostinfo.c	/^hostinfo_refer_ipmsg_crypt_policy_is_speed(void) {$/;"	f
hostinfo_refer_ipmsg_default_citation	src/hostinfo.c	/^hostinfo_refer_ipmsg_default_citation(void) {$/;"	f
hostinfo_refer_ipmsg_default_confirm	src/hostinfo.c	/^hostinfo_refer_ipmsg_default_confirm(void) {$/;"	f
hostinfo_refer_ipmsg_default_enclose	src/hostinfo.c	/^hostinfo_refer_ipmsg_default_enclose(void) {$/;"	f
hostinfo_refer_ipmsg_default_popup	src/hostinfo.c	/^hostinfo_refer_ipmsg_default_popup(void) {$/;"	f
hostinfo_refer_ipmsg_default_secret	src/hostinfo.c	/^hostinfo_refer_ipmsg_default_secret(void) {$/;"	f
hostinfo_refer_ipmsg_default_sound	src/hostinfo.c	/^hostinfo_refer_ipmsg_default_sound(void) {$/;"	f
hostinfo_refer_ipmsg_dialup_mode	src/hostinfo.c	/^hostinfo_refer_ipmsg_dialup_mode(void) {$/;"	f
hostinfo_refer_ipmsg_enable_log	src/hostinfo.c	/^hostinfo_refer_ipmsg_enable_log(void) {$/;"	f
hostinfo_refer_ipmsg_encrypt_public_key	src/hostinfo.c	/^hostinfo_refer_ipmsg_encrypt_public_key(void){$/;"	f
hostinfo_refer_ipmsg_group_sort_order	src/hostinfo.c	/^hostinfo_refer_ipmsg_group_sort_order(void) {$/;"	f
hostinfo_refer_ipmsg_iconify_dialogs	src/hostinfo.c	/^hostinfo_refer_ipmsg_iconify_dialogs(void) {$/;"	f
hostinfo_refer_ipmsg_ipaddr_logging	src/hostinfo.c	/^hostinfo_refer_ipmsg_ipaddr_logging(void) {$/;"	f
hostinfo_refer_ipmsg_ipv6_mode	src/hostinfo.c	/^hostinfo_refer_ipmsg_ipv6_mode(void) {$/;"	f
hostinfo_refer_ipmsg_is_allow_hlist	src/hostinfo.c	/^hostinfo_refer_ipmsg_is_allow_hlist(void) {$/;"	f
hostinfo_refer_ipmsg_is_get_hlist	src/hostinfo.c	/^hostinfo_refer_ipmsg_is_get_hlist(void) {$/;"	f
hostinfo_refer_ipmsg_is_sort_with_group	src/hostinfo.c	/^hostinfo_refer_ipmsg_is_sort_with_group(void) {$/;"	f
hostinfo_refer_ipmsg_log_locked_message_handling	src/hostinfo.c	/^hostinfo_refer_ipmsg_log_locked_message_handling(void) {$/;"	f
hostinfo_refer_ipmsg_logfile	src/hostinfo.c	/^hostinfo_refer_ipmsg_logfile(void) {$/;"	f
hostinfo_refer_ipmsg_logname_logging	src/hostinfo.c	/^hostinfo_refer_ipmsg_logname_logging(void) {$/;"	f
hostinfo_refer_ipmsg_port	src/hostinfo.c	/^hostinfo_refer_ipmsg_port(void){$/;"	f
hostinfo_refer_ipmsg_sub_sort_id	src/hostinfo.c	/^hostinfo_refer_ipmsg_sub_sort_id(void) {$/;"	f
hostinfo_refer_ipmsg_sub_sort_order	src/hostinfo.c	/^hostinfo_refer_ipmsg_sub_sort_order(void) {$/;"	f
hostinfo_refer_ipmsg_use_lock	src/hostinfo.c	/^hostinfo_refer_ipmsg_use_lock(void){$/;"	f
hostinfo_refer_lock_password	src/hostinfo.c	/^hostinfo_refer_lock_password(void) {$/;"	f
hostinfo_refer_nick_name	src/hostinfo.c	/^hostinfo_refer_nick_name(void) {$/;"	f
hostinfo_refer_user_name	src/hostinfo.c	/^hostinfo_refer_user_name(void) {$/;"	f
hostinfo_register_password	src/hostinfo.c	/^hostinfo_register_password(int type, const char *encoded_password) {$/;"	f	file:
hostinfo_send_broad_cast	src/hostinfo.c	/^hostinfo_send_broad_cast(const udp_con_t *con,const char *msg,size_t len){$/;"	f
hostinfo_set_absent_id	src/hostinfo.c	/^hostinfo_set_absent_id(int index){$/;"	f
hostinfo_set_enable_systray	src/hostinfo.c	/^hostinfo_set_enable_systray(gboolean val){$/;"	f
hostinfo_set_encoding	src/hostinfo.c	/^hostinfo_set_encoding(const char *encoding) {$/;"	f
hostinfo_set_encryption_key_password	src/hostinfo.c	/^hostinfo_set_encryption_key_password(const char *encoded_password) {$/;"	f
hostinfo_set_group_name	src/hostinfo.c	/^hostinfo_set_group_name(const char *groupName) {$/;"	f
hostinfo_set_header_state	src/hostinfo.c	/^hostinfo_set_header_state(guint val){$/;"	f
hostinfo_set_ipmsg_absence_editor_size	src/hostinfo.c	/^hostinfo_set_ipmsg_absence_editor_size(gint width,gint height){$/;"	f
hostinfo_set_ipmsg_absent	src/hostinfo.c	/^hostinfo_set_ipmsg_absent(gboolean state) {$/;"	f
hostinfo_set_ipmsg_absent_message	src/hostinfo.c	/^hostinfo_set_ipmsg_absent_message(int index,const char *message){$/;"	f
hostinfo_set_ipmsg_absent_title	src/hostinfo.c	/^hostinfo_set_ipmsg_absent_title(int index,const char *title){$/;"	f
hostinfo_set_ipmsg_attach_editor_size	src/hostinfo.c	/^hostinfo_set_ipmsg_attach_editor_size(gint width,gint height){$/;"	f
hostinfo_set_ipmsg_broadcast_list	src/hostinfo.c	/^hostinfo_set_ipmsg_broadcast_list(GSList *list){$/;"	f
hostinfo_set_ipmsg_cipher	src/hostinfo.c	/^hostinfo_set_ipmsg_cipher(unsigned long val){$/;"	f
hostinfo_set_ipmsg_crypt_policy_as_speed	src/hostinfo.c	/^hostinfo_set_ipmsg_crypt_policy_as_speed(gboolean val){$/;"	f
hostinfo_set_ipmsg_default_citation	src/hostinfo.c	/^hostinfo_set_ipmsg_default_citation(gboolean val) {$/;"	f
hostinfo_set_ipmsg_default_confirm	src/hostinfo.c	/^hostinfo_set_ipmsg_default_confirm(gboolean val) {$/;"	f
hostinfo_set_ipmsg_default_enclose	src/hostinfo.c	/^hostinfo_set_ipmsg_default_enclose(gboolean val) {$/;"	f
hostinfo_set_ipmsg_default_popup	src/hostinfo.c	/^hostinfo_set_ipmsg_default_popup(gboolean val) {$/;"	f
hostinfo_set_ipmsg_default_secret	src/hostinfo.c	/^hostinfo_set_ipmsg_default_secret(gboolean val) {$/;"	f
hostinfo_set_ipmsg_default_sound	src/hostinfo.c	/^hostinfo_set_ipmsg_default_sound(gboolean val) {$/;"	f
hostinfo_set_ipmsg_dialup_mode	src/hostinfo.c	/^hostinfo_set_ipmsg_dialup_mode(gboolean val) {$/;"	f
hostinfo_set_ipmsg_enable_log	src/hostinfo.c	/^hostinfo_set_ipmsg_enable_log(gboolean val) {$/;"	f
hostinfo_set_ipmsg_encrypt_public_key	src/hostinfo.c	/^hostinfo_set_ipmsg_encrypt_public_key(gboolean val){$/;"	f
hostinfo_set_ipmsg_group_sort_order	src/hostinfo.c	/^hostinfo_set_ipmsg_group_sort_order(gboolean val) {$/;"	f
hostinfo_set_ipmsg_header_order	src/hostinfo.c	/^hostinfo_set_ipmsg_header_order(int index,int col_id){$/;"	f
hostinfo_set_ipmsg_iconify_dialogs	src/hostinfo.c	/^hostinfo_set_ipmsg_iconify_dialogs(gboolean val) {$/;"	f
hostinfo_set_ipmsg_ipaddr_logging	src/hostinfo.c	/^hostinfo_set_ipmsg_ipaddr_logging(gboolean val) {$/;"	f
hostinfo_set_ipmsg_ipv6_mode	src/hostinfo.c	/^hostinfo_set_ipmsg_ipv6_mode(gboolean val) {$/;"	f
hostinfo_set_ipmsg_is_allow_hlist	src/hostinfo.c	/^hostinfo_set_ipmsg_is_allow_hlist(gboolean val) {$/;"	f
hostinfo_set_ipmsg_is_get_hlist	src/hostinfo.c	/^hostinfo_set_ipmsg_is_get_hlist(gboolean val) {$/;"	f
hostinfo_set_ipmsg_logfile	src/hostinfo.c	/^hostinfo_set_ipmsg_logfile(const char *file) {$/;"	f
hostinfo_set_ipmsg_logname_logging	src/hostinfo.c	/^hostinfo_set_ipmsg_logname_logging(gboolean val) {$/;"	f
hostinfo_set_ipmsg_message_window_size	src/hostinfo.c	/^hostinfo_set_ipmsg_message_window_size(gint width,gint height){$/;"	f
hostinfo_set_ipmsg_port	src/hostinfo.c	/^hostinfo_set_ipmsg_port(int port){$/;"	f
hostinfo_set_ipmsg_recv_window_size	src/hostinfo.c	/^hostinfo_set_ipmsg_recv_window_size(gint width,gint height){$/;"	f
hostinfo_set_ipmsg_sort_with_group	src/hostinfo.c	/^hostinfo_set_ipmsg_sort_with_group(gboolean val) {$/;"	f
hostinfo_set_ipmsg_sub_sort_id	src/hostinfo.c	/^hostinfo_set_ipmsg_sub_sort_id(gint val) {$/;"	f
hostinfo_set_ipmsg_sub_sort_order	src/hostinfo.c	/^hostinfo_set_ipmsg_sub_sort_order(gboolean val) {$/;"	f
hostinfo_set_ipmsg_use_lock	src/hostinfo.c	/^hostinfo_set_ipmsg_use_lock(gboolean val){$/;"	f
hostinfo_set_ipmsg_window_size	src/hostinfo.c	/^hostinfo_set_ipmsg_window_size(const gchar *wkey,const gchar *hkey,gint width,gint height){$/;"	f	file:
hostinfo_set_lock_password	src/hostinfo.c	/^hostinfo_set_lock_password(const char *encoded_password) {$/;"	f
hostinfo_set_log_locked_message_handling	src/hostinfo.c	/^hostinfo_set_log_locked_message_handling(gboolean val) {$/;"	f
hostinfo_set_nick_name	src/hostinfo.c	/^hostinfo_set_nick_name(const char *nickName) {$/;"	f
hostinfo_update_internal_password	src/hostinfo.c	/^hostinfo_update_internal_password(int type) {$/;"	f	file:
hostinfo_update_ipmsg_ipaddr_prio	src/hostinfo.c	/^hostinfo_update_ipmsg_ipaddr_prio(const char *ipaddr,int prio){$/;"	f
hostlist_userinfo_add_with_answer	src/userdb.c	/^hostlist_userinfo_add_with_answer(const udp_con_t *con, const char *message,int *next_count){$/;"	f	file:
hostname	src/hostinfo.c	/^static gchar *hostname=NULL;$/;"	v	file:
hostname	src/message.h	/^  char *hostname;$/;"	m	struct:_msg_data
info_message_window	src/dialog.c	/^info_message_window(const gchar *user,const gchar *ipaddr, $/;"	f
init_download_file_info	src/fileattach.c	/^init_download_file_info(download_file_block_t **ret_info) {$/;"	f	file:
init_ipmsg	src/ipmsg.c	/^init_ipmsg(void){$/;"	f
init_ipmsg_private	src/recvmsg.c	/^init_ipmsg_private(ipmsg_private_data_t **priv,const int type){$/;"	f
init_message_data	src/message.c	/^init_message_data(msg_data_t *msg){$/;"	f
init_message_info_manager	src/msginfo.c	/^init_message_info_manager(void){$/;"	f
init_recvmsg_private	src/recvmsg.c	/^init_recvmsg_private(const char *ipaddr,int flags,int pktno, ipmsg_private_data_t **priv) {$/;"	f
init_sound_system	src/sound.c	/^init_sound_system(const char *appname){$/;"	f
init_sound_system	src/sound.c	/^init_sound_system(const char *name){$/;"	f
init_win_timer_id	src/recvmsg.c	/^static guint init_win_timer_id;$/;"	v	file:
interface	src/dbusif.h	/^  gchar          *interface;$/;"	m	struct:_dbus_con_t
internal_create_crypt_config_window	src/uicommon.c	/^internal_create_crypt_config_window(void){$/;"	f
internal_create_download_window	src/downloads.c	/^internal_create_download_window(GtkWindow *recvWin,GtkWindow **window){$/;"	f
internal_create_fuzai_editor	src/fuzai.c	/^internal_create_fuzai_editor(void){$/;"	f
internal_create_messageWindow	src/callbacks.c	/^internal_create_messageWindow(void){$/;"	f
internal_create_recv_message_window	src/recvmsg.c	/^internal_create_recv_message_window(const msg_data_t *msg,const char *from){$/;"	f	file:
internal_create_viewConfigWindow	src/menu.c	/^internal_create_viewConfigWindow (void){$/;"	f
internal_create_view_config_menu	src/uicommon.c	/^internal_create_view_config_menu(GtkWidget *view){$/;"	f	file:
internal_extend_memory	src/ipmsg.c	/^internal_extend_memory(void **buff_p,size_t new_size,size_t orig_size,gboolean is_clear) {$/;"	f
internal_realloc	src/util.c	/^internal_realloc(void **ptr, size_t new_size, size_t old_size){$/;"	f
internal_refer_user_by_addr	src/userdb.c	/^internal_refer_user_by_addr(const char *ipaddr,const userdb_t **entry_ref){$/;"	f	file:
internal_reopen_logfile	src/logfile.c	/^internal_reopen_logfile(const char *filepath){$/;"	f	file:
internal_set_buffer	src/netcommon.c	/^internal_set_buffer(const int soc,int type,int max,int min,int *actual){$/;"	f	file:
internal_set_timeout	src/netcommon.c	/^internal_set_timeout(const int soc,int type,unsigned long msec){$/;"	f	file:
ipaddr	src/fileattach.h	/^  gchar *ipaddr; $/;"	m	struct:_attach_file_block
ipaddr	src/msginfo.h	/^  gchar *ipaddr;        \/*  送信先アドレスのコピー  *\/$/;"	m	struct:_message_info
ipaddr	src/private.h	/^  char    *ipaddr;$/;"	m	struct:_ipmsg_recvmsg_private
ipaddr	src/userdb.h	/^  gchar *ipaddr;$/;"	m	struct:_userdb
ipmsg_cap_t	src/ipmsg_types.h	/^typedef unsigned long ipmsg_cap_t;$/;"	t
ipmsg_command_t	src/ipmsg_types.h	/^typedef unsigned long ipmsg_command_t;$/;"	t
ipmsg_connect_dbus_service	src/dbusif.c	/^ipmsg_connect_dbus_service(DBusGConnection *bus, $/;"	f	file:
ipmsg_construct_getfile_message	src/protocol.c	/^ipmsg_construct_getfile_message(const tcp_con_t *con, const char *ipaddr, ipmsg_ftype_t ftype, const char *msg_string, ipmsg_send_flags_t flags, size_t *returned_len, char **returned_message){$/;"	f
ipmsg_convert_string_external	src/codeset.c	/^ipmsg_convert_string_external(const char *ipaddr, const char *string, const gchar **to_string) {$/;"	f
ipmsg_convert_string_internal	src/codeset.c	/^ipmsg_convert_string_internal(const char *ipaddr, const char *string, const gchar **to_string) {$/;"	f
ipmsg_dbus_create_bus	src/dbusif.c	/^ipmsg_dbus_create_bus(DBusBusType type, DBusGConnection **con_p){$/;"	f	file:
ipmsg_decrypt_message	src/cryptif.c	/^ipmsg_decrypt_message(const char *peer_addr, const char *message, $/;"	f
ipmsg_dispatch_message	src/protocol.c	/^ipmsg_dispatch_message(const udp_con_t *con, const msg_data_t *msg){$/;"	f
ipmsg_encrypt_message	src/cryptif.c	/^ipmsg_encrypt_message(const char *peer_addr, const char *message, $/;"	f
ipmsg_err_dialog	src/uicommon.h	41;"	d
ipmsg_err_dialog_mordal	src/uicommon.h	45;"	d
ipmsg_fattr	src/downloads.h	/^  unsigned long ipmsg_fattr;$/;"	m	struct:_dir_request
ipmsg_fattr	src/fileattach.h	/^  ipmsg_ftype_t ipmsg_fattr;$/;"	m	struct:_download_file_info
ipmsg_fattr	src/fileattach.h	/^  ipmsg_ftype_t ipmsg_fattr;$/;"	m	struct:_file_info
ipmsg_ftype_t	src/ipmsg_types.h	/^typedef unsigned long ipmsg_ftype_t;$/;"	t
ipmsg_get_pkt_no	src/protocol.c	/^ipmsg_get_pkt_no(void) {$/;"	f
ipmsg_notify_number	src/protocol.c	/^ipmsg_notify_number(const udp_con_t *con, const char *ipaddr , $/;"	f	file:
ipmsg_pem_passwd_call_back	src/pubcrypt.c	/^ipmsg_pem_passwd_call_back(char *buf, int len, int rwflag, void *cb_arg){$/;"	f	file:
ipmsg_pem_passwd_dialog	src/pubcrypt.c	/^ipmsg_pem_passwd_dialog(gchar **passwd_p){$/;"	f	file:
ipmsg_private_data_t	src/private.h	/^}ipmsg_private_data_t;$/;"	t	typeref:struct:_ipmsg_private_data
ipmsg_proc_ans_entry	src/protocol.c	/^ipmsg_proc_ans_entry(const udp_con_t *con,const msg_data_t *msg) {$/;"	f	file:
ipmsg_proc_anslist	src/protocol.c	/^ipmsg_proc_anslist(const udp_con_t *con, const msg_data_t *msg){$/;"	f	file:
ipmsg_proc_anspubkey	src/protocol.c	/^ipmsg_proc_anspubkey(const udp_con_t *con,const msg_data_t *msg){$/;"	f	file:
ipmsg_proc_br_absence	src/protocol.c	/^ipmsg_proc_br_absence(const udp_con_t *con, const msg_data_t *msg){$/;"	f	file:
ipmsg_proc_br_entry	src/protocol.c	/^ipmsg_proc_br_entry(const udp_con_t *con,const msg_data_t *msg) {$/;"	f	file:
ipmsg_proc_br_exit	src/protocol.c	/^ipmsg_proc_br_exit(const udp_con_t *con,const msg_data_t *msg) {$/;"	f	file:
ipmsg_proc_br_isgetlist2	src/protocol.c	/^ipmsg_proc_br_isgetlist2(const udp_con_t *con, const msg_data_t *msg){$/;"	f	file:
ipmsg_proc_get_absence_info	src/protocol.c	/^ipmsg_proc_get_absence_info(const udp_con_t *con, const msg_data_t *orig_msg) {$/;"	f	file:
ipmsg_proc_get_info	src/protocol.c	/^ipmsg_proc_get_info(const udp_con_t *con, const msg_data_t *orig_msg){$/;"	f	file:
ipmsg_proc_get_public_key	src/protocol.c	/^ipmsg_proc_get_public_key(const udp_con_t *con,const msg_data_t *msg) {$/;"	f	file:
ipmsg_proc_getlist	src/protocol.c	/^ipmsg_proc_getlist(const udp_con_t *con,const msg_data_t *msg){$/;"	f	file:
ipmsg_proc_okgetlist	src/protocol.c	/^ipmsg_proc_okgetlist(const udp_con_t *con, const msg_data_t *msg){$/;"	f	file:
ipmsg_proc_read_msg	src/protocol.c	/^ipmsg_proc_read_msg(const udp_con_t *con,const msg_data_t *msg) {$/;"	f	file:
ipmsg_proc_recv_msg	src/protocol.c	/^ipmsg_proc_recv_msg(const udp_con_t *con, const msg_data_t *msg) {$/;"	f	file:
ipmsg_proc_release_files_msg	src/protocol.c	/^ipmsg_proc_release_files_msg(const udp_con_t *con, const msg_data_t *msg) {$/;"	f	file:
ipmsg_proc_send_absence_info	src/protocol.c	/^ipmsg_proc_send_absence_info(const udp_con_t *con, const msg_data_t *msg) {$/;"	f	file:
ipmsg_proc_send_info	src/protocol.c	/^ipmsg_proc_send_info(const udp_con_t *con, const msg_data_t *msg) {$/;"	f	file:
ipmsg_proc_send_info_packets	src/protocol.c	/^ipmsg_proc_send_info_packets(const udp_con_t *con, const msg_data_t *msg) {$/;"	f	file:
ipmsg_proc_send_msg	src/protocol.c	/^ipmsg_proc_send_msg(const udp_con_t *con, const msg_data_t *msg) {$/;"	f	file:
ipmsg_protocol_flags_get_command	src/protocol.h	172;"	d
ipmsg_protocol_flags_get_opt	src/protocol.h	179;"	d
ipmsg_protocol_user_opration	src/protocol.c	/^ipmsg_protocol_user_opration(const udp_con_t *con, const msg_data_t *msg, $/;"	f	file:
ipmsg_recvmsg_private_t	src/private.h	/^}ipmsg_recvmsg_private_t;$/;"	t	typeref:struct:_ipmsg_recvmsg_private
ipmsg_send_absence_msg	src/protocol.c	/^ipmsg_send_absence_msg(const udp_con_t *con, const int flags) {$/;"	f	file:
ipmsg_send_ans_entry	src/protocol.c	/^ipmsg_send_ans_entry(const udp_con_t *con,const int flags){$/;"	f	file:
ipmsg_send_ans_entry_common	src/protocol.c	/^ipmsg_send_ans_entry_common(const udp_con_t *con, const char *ipaddr, $/;"	f	file:
ipmsg_send_br_absence	src/protocol.c	/^ipmsg_send_br_absence(const udp_con_t *con, const int flags) {$/;"	f
ipmsg_send_br_entry	src/protocol.c	/^ipmsg_send_br_entry(const udp_con_t *con, const int flags){$/;"	f
ipmsg_send_br_exit	src/protocol.c	/^ipmsg_send_br_exit(const udp_con_t *con, const int flags){$/;"	f
ipmsg_send_br_isgetlist2	src/protocol.c	/^ipmsg_send_br_isgetlist2(const udp_con_t *con, const ipmsg_send_flags_t flags){$/;"	f	file:
ipmsg_send_broad_cast	src/ipmsg.c	/^ipmsg_send_broad_cast(const udp_con_t *con,const char *msg,size_t len){$/;"	f
ipmsg_send_dbus_no_response	src/dbusif.c	/^ipmsg_send_dbus_no_response(const DBusGProxy *proxy, const gchar *msg, $/;"	f	file:
ipmsg_send_entry_packets	src/protocol.c	/^ipmsg_send_entry_packets(const udp_con_t *con, const char *ipaddr, $/;"	f	file:
ipmsg_send_flags_t	src/ipmsg_types.h	/^typedef unsigned long ipmsg_send_flags_t;$/;"	t
ipmsg_send_get_info_msg	src/protocol.c	/^ipmsg_send_get_info_msg(const udp_con_t *con,const char *ipaddr,ipmsg_command_t command){$/;"	f
ipmsg_send_get_list	src/protocol.c	/^ipmsg_send_get_list(const udp_con_t *con, const char *ipaddr, const int index) {$/;"	f
ipmsg_send_getpubkey	src/protocol.c	/^ipmsg_send_getpubkey(const udp_con_t *con, const char *ipaddr){$/;"	f
ipmsg_send_gratuitous_ans_entry	src/protocol.c	/^ipmsg_send_gratuitous_ans_entry(const udp_con_t *con, const char *ipaddr, $/;"	f
ipmsg_send_message	src/ipmsg.c	/^ipmsg_send_message(const udp_con_t *con, const char *ipaddr, const char *msg,size_t len) {$/;"	f
ipmsg_send_packet	src/protocol.c	/^ipmsg_send_packet(const udp_con_t *con, const char *ipaddr, const pktno_t pktno, const int flags, const char *message, const char *extension) {$/;"	f	file:
ipmsg_send_read_msg	src/protocol.c	/^ipmsg_send_read_msg(const udp_con_t *con, const char *ipaddr, pktno_t pkt_num){$/;"	f
ipmsg_send_recv_msg	src/protocol.c	/^ipmsg_send_recv_msg(const udp_con_t *con, const msg_data_t *orig_msg){$/;"	f	file:
ipmsg_send_release_files	src/protocol.c	/^ipmsg_send_release_files(const udp_con_t *con, const char *ipaddr, int pktno){$/;"	f
ipmsg_send_send_msg	src/protocol.c	/^ipmsg_send_send_msg(const udp_con_t *con, const char *ipaddr, $/;"	f
ipmsg_send_sendmsg_packets	src/protocol.c	/^ipmsg_send_sendmsg_packets(const udp_con_t *con, const char *ipaddr, $/;"	f	file:
ipmsg_show_about_dialog	src/menu.c	/^ipmsg_show_about_dialog(void){$/;"	f
ipmsg_tcp_recv_thread	src/tcp.c	/^ipmsg_tcp_recv_thread(gpointer data){$/;"	f
ipmsg_tcp_server_thread	src/tcp.c	/^ipmsg_tcp_server_thread(gpointer data){$/;"	f
ipmsg_ui_thread	src/main.c	/^ipmsg_ui_thread(gpointer data){$/;"	f
ipmsg_update_ui	src/uicommon.c	/^ipmsg_update_ui(void){$/;"	f
ipmsg_update_ui_user_list	src/uicommon.c	/^ipmsg_update_ui_user_list(void){$/;"	f
ipmsg_wait_ms	src/uicommon.c	/^ipmsg_wait_ms(const int wait_ms){$/;"	f
is_sound_system_available	src/hostinfo.c	/^is_sound_system_available(void){$/;"	f
is_supported_file_type	src/downloads.c	/^is_supported_file_type(unsigned long ipmsg_fattr){$/;"	f
key2ipmsg_key_type	src/pubcrypt.c	/^static const int key2ipmsg_key_type[]={$/;"	v	file:
key_select_table	src/symcrypt.c	/^static ipmsg_cap_t key_select_table[]={$/;"	v	file:
keys	src/hostinfo.c	/^static const char *keys[] = {$/;"	v	file:
len	src/msginfo.h	/^  size_t len;$/;"	m	struct:_message_info
light_weight_flush	src/menu.c	/^light_weight_flush (void)$/;"	f	file:
listup_current_stored_windows	src/recvmsg.c	/^listup_current_stored_windows(void){$/;"	f	file:
load_private_key	src/pubcrypt.c	/^load_private_key(const char *fpath, RSA **rsa, const char *passwd){$/;"	f	file:
load_public_key	src/pubcrypt.c	/^load_public_key(const char *fpath, RSA **rsa){$/;"	f	file:
lock_pass_string	src/hostinfo.c	/^static gchar *lock_pass_string = NULL;$/;"	v	file:
logfile_init_logfile	src/logfile.c	/^logfile_init_logfile(void){$/;"	f
logfile_mutex	src/logfile.c	/^GStaticMutex logfile_mutex = G_STATIC_MUTEX_INIT;$/;"	v
logfile_recv_log	src/logfile.c	/^logfile_recv_log(const char *ipaddr, const ipmsg_send_flags_t flags, const char *message) {$/;"	f
logfile_reopen_logfile	src/logfile.c	/^logfile_reopen_logfile(const char *filepath){$/;"	f
logfile_send_log	src/logfile.c	/^logfile_send_log(const char *ipaddr, const ipmsg_send_flags_t flags, const char *message){$/;"	f
logfile_shutdown_logfile	src/logfile.c	/^logfile_shutdown_logfile(void){$/;"	f
logfile_string	src/hostinfo.c	/^static gchar *logfile_string=NULL;$/;"	v	file:
logfile_write_log	src/logfile.c	/^logfile_write_log(const char *direction,const char *ipaddr,const char *message){$/;"	f
lookup_widget	src/support.c	/^lookup_widget                          (GtkWidget       *widget,$/;"	f
lookup_widget_with_applet	src/recvmsg.c	/^lookup_widget_with_applet(GtkWidget       *widget,$/;"	f	file:
m_time	src/fileattach.h	/^  time_t m_time;$/;"	m	struct:_download_file_info
m_time	src/fileattach.h	/^  time_t m_time;$/;"	m	struct:_file_info
magic	src/message.h	/^  int magic;$/;"	m	struct:_msg_data
magic	src/private.h	/^  int magic;$/;"	m	struct:_ipmsg_private_data
main	config.guess	/^		main()$/;"	f
main	config.guess	/^	main ()$/;"	f
main	config.guess	/^main ()$/;"	f
main	src/applet.c	/^main (int argc, char *argv [])$/;"	f
main	src/main.c	/^main(int argc, char *argv[]){$/;"	f
main_info_ref	src/fileattach.h	/^  attach_file_block_t *main_info_ref;$/;"	m	struct:_file_info
make_entry_canonical	src/userdb.h	34;"	d
max_id	src/fileattach.h	/^  int max_id;$/;"	m	struct:_attach_file_block
menubar1_uiinfo	src/interface.c	/^static GnomeUIInfo menubar1_uiinfo[] =$/;"	v	file:
message	src/message.h	/^  char *message;$/;"	m	struct:_msg_data
message_info_find_element	src/msginfo.c	/^message_info_find_element(gconstpointer a,gconstpointer b) {$/;"	f	file:
message_info_t	src/msginfo.h	/^}message_info_t;$/;"	t	typeref:struct:_message_info
message_list	src/msginfo.c	/^static GList *message_list=NULL;$/;"	v	file:
message_watcher	src/recvmsg.c	/^message_watcher(gpointer data) {$/;"	f	file:
monitor_win_mutex	src/menu.c	/^GStaticMutex monitor_win_mutex = G_STATIC_MUTEX_INIT;$/;"	v
monitor_wins	src/menu.c	/^static GList *monitor_wins=NULL;$/;"	v	file:
msg	src/msginfo.h	/^  char *msg;$/;"	m	struct:_send_info
msg_data_t	src/message.h	/^}msg_data_t;$/;"	t	typeref:struct:_msg_data
msglst_mutex	src/msginfo.c	/^GStaticMutex msglst_mutex = G_STATIC_MUTEX_INIT;$/;"	v
mutex	src/fileattach.h	/^  GMutex *mutex;$/;"	m	struct:_attach_file_block
mutex	src/fileattach.h	/^  GMutex *mutex;$/;"	m	struct:_file_info
name	src/dbusif.h	/^  gchar          *name;$/;"	m	struct:_dbus_con_t
netcommon_get_peeraddr	src/netcommon.c	/^netcommon_get_peeraddr(struct addrinfo *info, char *peer_addr) {$/;"	f
new_pad	src/sound.c	/^new_pad (GstElement *element,$/;"	f	file:
nickname	src/hostinfo.c	/^static gchar *nickname=NULL;$/;"	v	file:
nickname	src/userdb.h	/^  gchar *nickname;$/;"	m	struct:_userdb
normal_image	src/recvmsg.c	/^static GtkWidget *normal_image=NULL;$/;"	v	file:
notify_userdb_changed	src/userdb.c	/^notify_userdb_changed(void){$/;"	f	file:
offset	src/fileattach.h	/^  off_t offset;  \/*未使用*\/$/;"	m	struct:_file_info
offset	src/tcp.h	/^  int offset;$/;"	m	struct:_request_msg
onAbsenceSelectionChanged	src/fuzai.c	/^onAbsenceSelectionChanged (GtkTreeSelection *sel,gpointer user_data)$/;"	f	file:
onAttachFileSelectionChanged	src/callbacks.c	/^onAttachFileSelectionChanged (GtkTreeSelection *sel, GtkListStore *liststore)$/;"	f	file:
onBroadcastSelectionChanged	src/callbacks.c	/^onBroadcastSelectionChanged (GtkTreeSelection *sel, GtkListStore *liststore)$/;"	f	file:
onDownloadMonitorSelectionChanged	src/menu.c	/^onDownloadMonitorSelectionChanged (GtkTreeSelection *sel, GtkListStore *liststore) {$/;"	f	file:
on_AttachFIleAddBtn_clicked	src/callbacks.c	/^on_AttachFIleAddBtn_clicked            (GtkButton       *button,$/;"	f
on_AttachFileFileChooseBtn_clicked	src/callbacks.c	/^on_AttachFileFileChooseBtn_clicked     (GtkButton       *button,$/;"	f
on_AttachFilePathEntry_activate	src/callbacks.c	/^on_AttachFilePathEntry_activate        (GtkEntry        *entry,$/;"	f
on_AttachFilePathEntry_changed	src/callbacks.c	/^on_AttachFilePathEntry_changed         (GtkEditable     *editable,$/;"	f
on_AttachFilePathEntry_drag_data_received	src/callbacks.c	/^on_AttachFilePathEntry_drag_data_received$/;"	f
on_AttachFileRemoveBtn_clicked	src/callbacks.c	/^on_AttachFileRemoveBtn_clicked         (GtkButton       *button,$/;"	f
on_DownLoadCancelBtn_clicked	src/callbacks.c	/^on_DownLoadCancelBtn_clicked           (GtkButton       *button,$/;"	f
on_DownLoadConfirmClose_clicked	src/callbacks.c	/^on_DownLoadConfirmClose_clicked        (GtkButton       *button,$/;"	f
on_DownLoadConfirmExec_clicked	src/callbacks.c	/^on_DownLoadConfirmExec_clicked         (GtkButton       *button,$/;"	f
on_DownLoadOKBtn_clicked	src/callbacks.c	/^on_DownLoadOKBtn_clicked               (GtkButton       *button,$/;"	f
on_DownLoadOpenBtn_clicked	src/callbacks.c	/^on_DownLoadOpenBtn_clicked             (GtkButton       *button,$/;"	f
on_DownloadConfirmDialog_destroy	src/callbacks.c	/^on_DownloadConfirmDialog_destroy       (GtkObject       *object,$/;"	f
on_DownloadConfirmDialog_show	src/callbacks.c	/^on_DownloadConfirmDialog_show          (GtkWidget       *widget,$/;"	f
on_PassWordCancelBtn_clicked	src/callbacks.c	/^on_PassWordCancelBtn_clicked           (GtkButton       *button,$/;"	f
on_RSAKeyEncryptionCBtn_toggled	src/callbacks.c	/^on_RSAKeyEncryptionCBtn_toggled        (GtkToggleButton *togglebutton,$/;"	f
on_about1_activate	src/callbacks.c	/^on_about1_activate                     (GtkMenuItem     *menuitem,$/;"	f
on_aboutdialog_check_resize	src/callbacks.c	/^on_aboutdialog_check_resize            (GtkContainer    *container,$/;"	f
on_aboutdialog_close	src/callbacks.c	/^on_aboutdialog_close                   (GtkDialog       *dialog,$/;"	f
on_aboutdialog_destroy	src/callbacks.c	/^on_aboutdialog_destroy                 (GtkObject       *object,$/;"	f
on_aboutdialog_response	src/callbacks.c	/^on_aboutdialog_response                (GtkDialog       *dialog,$/;"	f
on_aboutdialog_size_allocate	src/callbacks.c	/^on_aboutdialog_size_allocate           (GtkWidget       *widget,$/;"	f
on_absenceEditorCloseBtn_clicked	src/callbacks.c	/^on_absenceEditorCloseBtn_clicked       (GtkButton       *button,$/;"	f
on_absenceEditor_destroy	src/callbacks.c	/^on_absenceEditor_destroy               (GtkObject       *object,$/;"	f
on_absenceEditor_show	src/callbacks.c	/^on_absenceEditor_show                  (GtkWidget       *widget,$/;"	f
on_absenceEditor_size_allocate	src/callbacks.c	/^on_absenceEditor_size_allocate         (GtkWidget       *widget,$/;"	f
on_absence_info1_activate	src/callbacks.c	/^on_absence_info1_activate              (GtkMenuItem     *menuitem,$/;"	f
on_add_new_file	src/callbacks.c	/^on_add_new_file(const gchar *filename,GtkWidget *parent_window,gboolean is_clear) {$/;"	f	file:
on_app1_destroy	src/callbacks.c	/^on_app1_destroy                        (GtkObject       *object,$/;"	f
on_app1_destroy_event	src/callbacks.c	/^on_app1_destroy_event                  (GtkWidget       *widget,$/;"	f
on_app1_drag_data_received	src/callbacks.c	/^on_app1_drag_data_received             (GtkWidget       *widget,$/;"	f
on_app1_drag_drop	src/callbacks.c	/^on_app1_drag_drop                      (GtkWidget       *widget,$/;"	f
on_applyAndAbsentBtn_clicked	src/callbacks.c	/^on_applyAndAbsentBtn_clicked           (GtkButton       *button,$/;"	f
on_applyOnlyBtn_clicked	src/callbacks.c	/^on_applyOnlyBtn_clicked                (GtkButton       *button,$/;"	f
on_attachFileEditorMainFrame_drag_data_received	src/callbacks.c	/^on_attachFileEditorMainFrame_drag_data_received$/;"	f
on_attachFileEditor_check_resize	src/callbacks.c	/^on_attachFileEditor_check_resize       (GtkContainer    *container,$/;"	f
on_attachFileEditor_destroy	src/callbacks.c	/^on_attachFileEditor_destroy            (GtkObject       *object,$/;"	f
on_attachFileEditor_show	src/callbacks.c	/^on_attachFileEditor_show               (GtkWidget       *widget,$/;"	f
on_attachFileEditor_size_allocate	src/callbacks.c	/^on_attachFileEditor_size_allocate      (GtkWidget       *widget,$/;"	f
on_attach_window_drag_data_received	src/callbacks.c	/^on_attach_window_drag_data_received(GtkWidget *widget,GtkSelectionData *data){$/;"	f	file:
on_attachedFilesView_drag_data_received	src/callbacks.c	/^on_attachedFilesView_drag_data_received$/;"	f
on_attachment1_activate	src/callbacks.c	/^on_attachment1_activate                (GtkMenuItem     *menuitem,$/;"	f
on_attachmentfile_activate	src/callbacks.c	/^on_attachmentfile_activate             (GtkMenuItem     *menuitem,$/;"	f
on_bus_eos_callback	src/sound.c	/^on_bus_eos_callback (GstBus     *bus,$/;"	f	file:
on_bus_error_callback	src/sound.c	/^on_bus_error_callback (GstBus     *bus,$/;"	f	file:
on_cancelbutton1_clicked	src/callbacks.c	/^on_cancelbutton1_clicked               (GtkButton       *button,$/;"	f
on_clientInfoOKBtn_clicked	src/callbacks.c	/^on_clientInfoOKBtn_clicked             (GtkButton       *button,$/;"	f
on_clist4_click_column	src/callbacks.c	/^on_clist4_click_column                 (GtkCList        *clist,$/;"	f
on_close1_activate	src/callbacks.c	/^on_close1_activate                     (GtkMenuItem     *menuitem,$/;"	f
on_closeBtn_clicked	src/callbacks.c	/^on_closeBtn_clicked                    (GtkButton       *button,$/;"	f
on_close_button1_clicked	src/callbacks.c	/^on_close_button1_clicked               (GtkButton       *button,$/;"	f
on_comboboxentry1_editing_done	src/callbacks.c	/^on_comboboxentry1_editing_done         (GtkCellEditable *celleditable,$/;"	f
on_comboboxentry1_set_focus_child	src/callbacks.c	/^on_comboboxentry1_set_focus_child      (GtkContainer    *container,$/;"	f
on_configAddBcastBtn_clicked	src/callbacks.c	/^on_configAddBcastBtn_clicked           (GtkButton       *button,$/;"	f
on_configApplyBtn_clicked	src/callbacks.c	/^on_configApplyBtn_clicked              (GtkButton       *button,$/;"	f
on_configApplySettingBtn_clicked	src/callbacks.c	/^on_configApplySettingBtn_clicked       (GtkButton       *button,$/;"	f
on_configApplySettingBtn_pressed	src/callbacks.c	/^on_configApplySettingBtn_pressed       (GtkButton       *button,$/;"	f
on_configApplySettingBtn_released	src/callbacks.c	/^on_configApplySettingBtn_released      (GtkButton       *button,$/;"	f
on_configCancelBtn_clicked	src/callbacks.c	/^on_configCancelBtn_clicked             (GtkButton       *button,$/;"	f
on_configCancelBtn_pressed	src/callbacks.c	/^on_configCancelBtn_pressed             (GtkButton       *button,$/;"	f
on_configCancelBtn_released	src/callbacks.c	/^on_configCancelBtn_released            (GtkButton       *button,$/;"	f
on_configCitationCheckBtn_toggled	src/callbacks.c	/^on_configCitationCheckBtn_toggled      (GtkToggleButton *togglebutton,$/;"	f
on_configEncloseEnableCheckBtn_toggled	src/callbacks.c	/^on_configEncloseEnableCheckBtn_toggled (GtkToggleButton *togglebutton,$/;"	f
on_configIPV6CheckBtn_toggled	src/callbacks.c	/^on_configIPV6CheckBtn_toggled          (GtkToggleButton *togglebutton,$/;"	f
on_configLoggingEnableCheckBtn_toggled	src/callbacks.c	/^on_configLoggingEnableCheckBtn_toggled (GtkToggleButton *togglebutton,$/;"	f
on_configNoSoundCheckBtn_toggled	src/callbacks.c	/^on_configNoSoundCheckBtn_toggled       (GtkToggleButton *togglebutton,$/;"	f
on_configNonPopupCheckBtn_toggled	src/callbacks.c	/^on_configNonPopupCheckBtn_toggled      (GtkToggleButton *togglebutton,$/;"	f
on_configOpenCheckChkBtn_toggled	src/callbacks.c	/^on_configOpenCheckChkBtn_toggled       (GtkToggleButton *togglebutton,$/;"	f
on_configRemoveBcastBtn_clicked	src/callbacks.c	/^on_configRemoveBcastBtn_clicked        (GtkButton       *button,$/;"	f
on_configRemoveBcastBtn_pressed	src/callbacks.c	/^on_configRemoveBcastBtn_pressed        (GtkButton       *button,$/;"	f
on_configRemoveBcastBtn_released	src/callbacks.c	/^on_configRemoveBcastBtn_released       (GtkButton       *button,$/;"	f
on_configSecurityCancelBtn_clicked	src/callbacks.c	/^on_configSecurityCancelBtn_clicked     (GtkButton       *button,$/;"	f
on_configSecurityOKBtn_clicked	src/callbacks.c	/^on_configSecurityOKBtn_clicked         (GtkButton       *button,$/;"	f
on_configUserEnableCheckBtn_toggled	src/callbacks.c	/^on_configUserEnableCheckBtn_toggled    (GtkToggleButton *togglebutton,$/;"	f
on_configWindowAddGroupBtn_clicked	src/callbacks.c	/^on_configWindowAddGroupBtn_clicked     (GtkButton       *button,$/;"	f
on_configWindow_clicked	src/callbacks.c	/^on_configWindow_clicked                (GtkButton       *button,$/;"	f
on_configWindow_destroy	src/callbacks.c	/^on_configWindow_destroy                (GtkObject       *object,$/;"	f
on_configWindow_show	src/callbacks.c	/^on_configWindow_show                   (GtkWidget       *widget,$/;"	f
on_create_download_monitor	src/menu.c	/^on_create_download_monitor(void) {$/;"	f
on_currentPassWordEntry_changed	src/callbacks.c	/^on_currentPassWordEntry_changed        (GtkEditable     *editable,$/;"	f
on_decodeFailDialogOKButton_clicked	src/callbacks.c	/^on_decodeFailDialogOKButton_clicked    (GtkButton       *button,$/;"	f
on_deleteBtn_clicked	src/callbacks.c	/^on_deleteBtn_clicked                   (GtkButton       *button,$/;"	f
on_downloadMonitor_check_resize	src/callbacks.c	/^on_downloadMonitor_check_resize        (GtkContainer    *container,$/;"	f
on_downloadMonitor_destroy	src/callbacks.c	/^on_downloadMonitor_destroy             (GtkObject       *object,$/;"	f
on_downloadMonitor_show	src/callbacks.c	/^on_downloadMonitor_show                (GtkWidget       *widget,$/;"	f
on_downloadMonitor_size_allocate	src/callbacks.c	/^on_downloadMonitor_size_allocate       (GtkWidget       *widget,$/;"	f
on_downloadSaveBtn_clicked	src/callbacks.c	/^on_downloadSaveBtn_clicked             (GtkButton       *button,$/;"	f
on_downloadWindow_check_resize	src/callbacks.c	/^on_downloadWindow_check_resize         (GtkContainer    *container,$/;"	f
on_downloadWindow_destroy	src/callbacks.c	/^on_downloadWindow_destroy              (GtkObject       *object,$/;"	f
on_downloadWindow_destroy_event	src/callbacks.c	/^on_downloadWindow_destroy_event        (GtkWidget       *widget,$/;"	f
on_downloadWindow_size_allocate	src/callbacks.c	/^on_downloadWindow_size_allocate        (GtkWidget       *widget,$/;"	f
on_downloadfilechooserdialog_close	src/callbacks.c	/^on_downloadfilechooserdialog_close     (GtkDialog       *dialog,$/;"	f
on_downloadfilechooserdialog_confirm_overwrite	src/callbacks.c	/^on_downloadfilechooserdialog_confirm_overwrite$/;"	f
on_downloadfilechooserdialog_current_folder_changed	src/callbacks.c	/^on_downloadfilechooserdialog_current_folder_changed$/;"	f
on_downloadfilechooserdialog_destroy	src/callbacks.c	/^on_downloadfilechooserdialog_destroy   (GtkObject       *object,$/;"	f
on_downloadfilechooserdialog_file_activated	src/callbacks.c	/^on_downloadfilechooserdialog_file_activated$/;"	f
on_downloadfilechooserdialog_response	src/callbacks.c	/^on_downloadfilechooserdialog_response  (GtkDialog       *dialog,$/;"	f
on_downloadfilechooserdialog_update_preview	src/callbacks.c	/^on_downloadfilechooserdialog_update_preview$/;"	f
on_enableLogToggle_toggled	src/callbacks.c	/^on_enableLogToggle_toggled             (GtkToggleButton *togglebutton,$/;"	f
on_encloseCheckBtn_toggled	src/callbacks.c	/^on_encloseCheckBtn_toggled             (GtkToggleButton *togglebutton,$/;"	f
on_entry1_activate	src/callbacks.c	/^on_entry1_activate                     (GtkEntry        *entry,$/;"	f
on_entry1_editing_done	src/callbacks.c	/^on_entry1_editing_done                 (GtkCellEditable *celleditable,$/;"	f
on_entry2_activate	src/callbacks.c	/^on_entry2_activate                     (GtkEntry        *entry,$/;"	f
on_entry3_activate	src/callbacks.c	/^on_entry3_activate                     (GtkEntry        *entry,$/;"	f
on_entry3_changed	src/callbacks.c	/^on_entry3_changed                      (GtkEditable     *editable,$/;"	f
on_errorDialogCloseBtn_pressed	src/callbacks.c	/^on_errorDialogCloseBtn_pressed         (GtkButton       *button,$/;"	f
on_fuzai_config_activate	src/menu.c	/^on_fuzai_config_activate (gpointer menuitem){$/;"	f
on_fuzai_item_activate	src/menu.c	/^on_fuzai_item_activate (gpointer user_data){$/;"	f
on_get_version1_activate	src/callbacks.c	/^on_get_version1_activate               (GtkMenuItem     *menuitem,$/;"	f
on_groupInverseBtn_toggled	src/callbacks.c	/^on_groupInverseBtn_toggled             (GtkToggleButton *togglebutton,$/;"	f
on_groupselection_activate	src/callbacks.c	/^on_groupselection_activate             (GtkMenuItem     *menuitem,$/;"	f
on_init_win_event_button_press_event	src/menu.c	/^on_init_win_event_button_press_event (GtkWidget       *widget,$/;"	f
on_initialWindow_check_resize	src/callbacks.c	/^on_initialWindow_check_resize          (GtkContainer    *container,$/;"	f
on_initialWindow_destroy	src/callbacks.c	/^on_initialWindow_destroy               (GtkObject       *object,$/;"	f
on_initialWindow_show	src/callbacks.c	/^on_initialWindow_show                  (GtkWidget       *widget,$/;"	f
on_initialWindow_size_allocate	src/callbacks.c	/^on_initialWindow_size_allocate         (GtkWidget       *widget,$/;"	f
on_lockChkBtn_toggled	src/callbacks.c	/^on_lockChkBtn_toggled                  (GtkToggleButton *togglebutton,$/;"	f
on_lockPWDBtn_clicked	src/callbacks.c	/^on_lockPWDBtn_clicked                  (GtkButton       *button,$/;"	f
on_logFileDialogBtn_clicked	src/callbacks.c	/^on_logFileDialogBtn_clicked            (GtkButton       *button,$/;"	f
on_logFileDialogBtn_pressed	src/callbacks.c	/^on_logFileDialogBtn_pressed            (GtkButton       *button,$/;"	f
on_logFileDialogBtn_released	src/callbacks.c	/^on_logFileDialogBtn_released           (GtkButton       *button,$/;"	f
on_logfileChooserdialog_close	src/callbacks.c	/^on_logfileChooserdialog_close          (GtkDialog       *dialog,$/;"	f
on_logfileChooserdialog_destroy	src/callbacks.c	/^on_logfileChooserdialog_destroy        (GtkObject       *object,$/;"	f
on_logfileChooserdialog_response	src/callbacks.c	/^on_logfileChooserdialog_response       (GtkDialog       *dialog,$/;"	f
on_mainmenu_about_item	src/menu.c	/^on_mainmenu_about_item(gpointer menuitem){$/;"	f
on_mainmenu_absent_item	src/menu.c	/^on_mainmenu_absent_item(gpointer menuitem){$/;"	f
on_mainmenu_attend_item	src/menu.c	/^on_mainmenu_attend_item(gpointer menuitem){$/;"	f
on_mainmenu_config_security_item	src/menu.c	/^on_mainmenu_config_security_item(gpointer menuitem){$/;"	f
on_mainmenu_download_item	src/menu.c	/^on_mainmenu_download_item(gpointer menuitem){$/;"	f
on_mainmenu_foreground_win_item	src/menu.c	/^on_mainmenu_foreground_win_item(gpointer menuitem){$/;"	f
on_mainmenu_log_item	src/menu.c	/^on_mainmenu_log_item(gpointer menuitem){$/;"	f
on_mainmenu_new_message_item	src/menu.c	/^on_mainmenu_new_message_item(gpointer menuitem){$/;"	f
on_mainmenu_preferences_item	src/menu.c	/^on_mainmenu_preferences_item(gpointer menuitem){$/;"	f
on_mainmenu_quit_item	src/menu.c	/^on_mainmenu_quit_item (gpointer menuitem){$/;"	f
on_mainmenu_remove_win_item	src/menu.c	/^on_mainmenu_remove_win_item(gpointer menuitem){$/;"	f
on_menu_save_list_headers_state_activate	src/callbacks.c	/^on_menu_save_list_headers_state_activate$/;"	f
on_menu_security_configuration_activate	src/callbacks.c	/^on_menu_security_configuration_activate(GtkMenuItem     *menuitem,$/;"	f
on_menu_set_all_as_default_activate	src/callbacks.c	/^on_menu_set_all_as_default_activate    (GtkMenuItem     *menuitem,$/;"	f
on_menu_set_priority_as_1_activate	src/callbacks.c	/^on_menu_set_priority_as_1_activate     (GtkMenuItem     *menuitem,$/;"	f
on_menu_set_priority_as_2_activate	src/callbacks.c	/^on_menu_set_priority_as_2_activate     (GtkMenuItem     *menuitem,$/;"	f
on_menu_set_priority_as_3_activate	src/callbacks.c	/^on_menu_set_priority_as_3_activate     (GtkMenuItem     *menuitem,$/;"	f
on_menu_set_priority_as_4_activate	src/callbacks.c	/^on_menu_set_priority_as_4_activate     (GtkMenuItem     *menuitem,$/;"	f
on_menu_set_them_as_default_activate	src/callbacks.c	/^on_menu_set_them_as_default_activate   (GtkMenuItem     *menuitem,$/;"	f
on_menu_set_them_invisible_item_activate	src/callbacks.c	/^on_menu_set_them_invisible_item_activate$/;"	f
on_menu_show_invisible_items_activate	src/callbacks.c	/^on_menu_show_invisible_items_activate  (GtkMenuItem     *menuitem,$/;"	f
on_menu_user_list_view_config_activate	src/callbacks.c	/^on_menu_user_list_view_config_activate (GtkMenuItem     *menuitem,$/;"	f
on_messageUserTree_drag_data_received	src/callbacks.c	/^on_messageUserTree_drag_data_received  (GtkWidget       *widget,$/;"	f
on_messageUserTree_group_clicked	src/uicommon.c	/^on_messageUserTree_group_clicked(GtkTreeViewColumn *treeviewcolumn,$/;"	f	file:
on_messageUserTree_host_clicked	src/uicommon.c	/^on_messageUserTree_host_clicked(GtkTreeViewColumn *treeviewcolumn,$/;"	f	file:
on_messageUserTree_ipaddr_clicked	src/uicommon.c	/^on_messageUserTree_ipaddr_clicked(GtkTreeViewColumn *treeviewcolumn,$/;"	f	file:
on_messageUserTree_logon_clicked	src/uicommon.c	/^on_messageUserTree_logon_clicked(GtkTreeViewColumn *treeviewcolumn,$/;"	f	file:
on_messageUserTree_priority_clicked	src/uicommon.c	/^on_messageUserTree_priority_clicked(GtkTreeViewColumn *treeviewcolumn,$/;"	f	file:
on_messageUserTree_user_clicked	src/uicommon.c	/^on_messageUserTree_user_clicked(GtkTreeViewColumn *treeviewcolumn,$/;"	f	file:
on_messageWinCloseBtn_clicked	src/callbacks.c	/^on_messageWinCloseBtn_clicked          (GtkButton       *button,$/;"	f
on_messageWinUpdateBtn_clicked	src/callbacks.c	/^on_messageWinUpdateBtn_clicked         (GtkButton       *button,$/;"	f
on_messageWindow_drag_data_get	src/callbacks.c	/^on_messageWindow_drag_data_get         (GtkWidget       *widget,$/;"	f
on_messageWindow_drag_end	src/callbacks.c	/^on_messageWindow_drag_end              (GtkWidget       *widget,$/;"	f
on_messageWindow_key_release_event	src/callbacks.c	/^on_messageWindow_key_release_event     (GtkWidget       *widget,$/;"	f
on_messageWindow_show	src/callbacks.c	/^on_messageWindow_show                  (GtkWidget       *widget,$/;"	f
on_messageWindow_size_allocate	src/callbacks.c	/^on_messageWindow_size_allocate         (GtkWidget       *widget,$/;"	f
on_message_view_event_button_press_event	src/uicommon.c	/^on_message_view_event_button_press_event (GtkWidget       *widget,$/;"	f	file:
on_message_window_drag_data_received	src/callbacks.c	/^on_message_window_drag_data_received(GtkWidget *widget,GtkSelectionData *data){$/;"	f	file:
on_new1_activate	src/callbacks.c	/^on_new1_activate                       (GtkMenuItem     *menuitem,$/;"	f
on_okbutton1_clicked	src/callbacks.c	/^on_okbutton1_clicked                   (GtkButton       *button,$/;"	f
on_passWordDialogCOKBtn_clicked	src/callbacks.c	/^on_passWordDialogCOKBtn_clicked        (GtkButton       *button,$/;"	f
on_passWordDialogCancelBtn_clicked	src/callbacks.c	/^on_passWordDialogCancelBtn_clicked     (GtkButton       *button,$/;"	f
on_passWordOKBtn_clicked	src/callbacks.c	/^on_passWordOKBtn_clicked               (GtkButton       *button,$/;"	f
on_passwdEntry1_changed	src/callbacks.c	/^on_passwdEntry1_changed                (GtkEditable     *editable,$/;"	f
on_passwdEntry2_changed	src/callbacks.c	/^on_passwdEntry2_changed                (GtkEditable     *editable,$/;"	f
on_passwordEntry_activate	src/callbacks.c	/^on_passwordEntry_activate              (GtkEntry        *entry,$/;"	f
on_pixmap_destroy	src/recvmsg.c	/^on_pixmap_destroy(GtkObject *object, gpointer user_data)$/;"	f	file:
on_preferences1_activate	src/callbacks.c	/^on_preferences1_activate               (GtkMenuItem     *menuitem,$/;"	f
on_pubkeyPWDBtn_clicked	src/callbacks.c	/^on_pubkeyPWDBtn_clicked                (GtkButton       *button,$/;"	f
on_quit1_activate	src/callbacks.c	/^on_quit1_activate                      (GtkMenuItem     *menuitem,$/;"	f
on_readNotifyDialogOKBtn_pressed	src/callbacks.c	/^on_readNotifyDialogOKBtn_pressed       (GtkButton       *button,$/;"	f
on_readNotifyDialog_close	src/callbacks.c	/^on_readNotifyDialog_close              (GtkDialog       *dialog,$/;"	f
on_readNotifyDialog_destroy	src/callbacks.c	/^on_readNotifyDialog_destroy            (GtkObject       *object,$/;"	f
on_readNotifyDialog_response	src/callbacks.c	/^on_readNotifyDialog_response           (GtkDialog       *dialog,$/;"	f
on_readNotifyDialog_window_state_event	src/callbacks.c	/^on_readNotifyDialog_window_state_event (GtkWidget       *widget,$/;"	f
on_save_list_headers_state1_activate	src/callbacks.c	/^on_save_list_headers_state1_activate   (GtkMenuItem     *menuitem,$/;"	f
on_sealBtn_clicked	src/recvmsg.c	/^on_sealBtn_clicked                     (GtkButton       *button,$/;"	f
on_sealBtn_destroy	src/recvmsg.c	/^on_sealBtn_destroy                        (GtkObject       *object,$/;"	f
on_secondKeyInverseBtn_toggled	src/callbacks.c	/^on_secondKeyInverseBtn_toggled         (GtkToggleButton *togglebutton,$/;"	f
on_sendBtn_clicked	src/callbacks.c	/^on_sendBtn_clicked                     (GtkButton       *button,$/;"	f
on_sendBtn_pressed	src/callbacks.c	/^on_sendBtn_pressed                     (GtkButton       *button,$/;"	f
on_sendBtn_released	src/callbacks.c	/^on_sendBtn_released                    (GtkButton       *button,$/;"	f
on_sendFailDialog_close	src/callbacks.c	/^on_sendFailDialog_close                (GtkDialog       *dialog,$/;"	f
on_sendFailDialog_destroy	src/callbacks.c	/^on_sendFailDialog_destroy              (GtkObject       *object,$/;"	f
on_sendFailDialog_response	src/callbacks.c	/^on_sendFailDialog_response             (GtkDialog       *dialog,$/;"	f
on_sendFailDialog_show	src/callbacks.c	/^on_sendFailDialog_show                 (GtkWidget       *widget,$/;"	f
on_set_all_as_default_activate	src/callbacks.c	/^on_set_all_as_default_activate         (GtkMenuItem     *menuitem,$/;"	f
on_set_as_default_activate	src/callbacks.c	/^on_set_as_default_activate             (GtkMenuItem     *menuitem,$/;"	f
on_set_invisible_item_activate	src/callbacks.c	/^on_set_invisible_item_activate         (GtkMenuItem     *menuitem,$/;"	f
on_set_priority1_activate	src/callbacks.c	/^on_set_priority1_activate              (GtkMenuItem     *menuitem,$/;"	f
on_set_priority_as_2_activate	src/callbacks.c	/^on_set_priority_as_2_activate          (GtkMenuItem     *menuitem,$/;"	f
on_set_priority_as_3_activate	src/callbacks.c	/^on_set_priority_as_3_activate          (GtkMenuItem     *menuitem,$/;"	f
on_set_priority_as_4_activate	src/callbacks.c	/^on_set_priority_as_4_activate          (GtkMenuItem     *menuitem,$/;"	f
on_set_user_list_view_config_activate	src/callbacks.c	/^on_set_user_list_view_config_activate  (GtkMenuItem     *menuitem,$/;"	f
on_show_invisible_items1_activate	src/callbacks.c	/^on_show_invisible_items1_activate      (GtkMenuItem     *menuitem,$/;"	f
on_sort_filter1_activate	src/callbacks.c	/^on_sort_filter1_activate               (GtkMenuItem     *menuitem,$/;"	f
on_startBtn_clicked	src/callbacks.c	/^on_startBtn_clicked                    (GtkButton       *button,$/;"	f
on_statusIcon_activate	src/systray.c	/^on_statusIcon_activate(GtkStatusIcon *status_icon,$/;"	f	file:
on_statusIcon_popupmenu	src/systray.c	/^on_statusIcon_popupmenu(GtkStatusIcon *status_icon,$/;"	f	file:
on_textview1_button_press_event	src/callbacks.c	/^on_textview1_button_press_event        (GtkWidget       *widget,$/;"	f
on_textview1_drag_data_received	src/callbacks.c	/^on_textview1_drag_data_received        (GtkWidget       *widget,$/;"	f
on_update2_activate	src/callbacks.c	/^on_update2_activate                    (GtkMenuItem     *menuitem,$/;"	f
on_updateBtn_clicked	src/callbacks.c	/^on_updateBtn_clicked                   (GtkButton       *button,$/;"	f
on_useLockCBtn_toggled	src/callbacks.c	/^on_useLockCBtn_toggled                 (GtkToggleButton *togglebutton,$/;"	f
on_usermenu_group_item	src/uicommon.c	/^on_usermenu_group_item (gpointer data){$/;"	f
on_viewConfigCloseBtn_clicked	src/callbacks.c	/^on_viewConfigCloseBtn_clicked          (GtkButton       *button,$/;"	f
on_viewWindow_check_resize	src/callbacks.c	/^on_viewWindow_check_resize             (GtkContainer    *container,$/;"	f
on_viewWindow_destroy	src/callbacks.c	/^on_viewWindow_destroy                  (GtkObject       *object,$/;"	f
on_viewWindow_show	src/callbacks.c	/^on_viewWindow_show                     (GtkWidget       *widget,$/;"	f
on_viewWindow_size_allocate	src/callbacks.c	/^on_viewWindow_size_allocate            (GtkWidget       *widget,$/;"	f
on_viewwindowCloseBtn_clicked	src/callbacks.c	/^on_viewwindowCloseBtn_clicked          (GtkButton       *button,$/;"	f
on_viewwindowReplyBtn_clicked	src/callbacks.c	/^on_viewwindowReplyBtn_clicked          (GtkButton       *button,$/;"	f
on_viewwindowTextView_button_press_event	src/callbacks.c	/^on_viewwindowTextView_button_press_event$/;"	f
on_vpaned1_drag_data_received	src/callbacks.c	/^on_vpaned1_drag_data_received          (GtkWidget       *widget,$/;"	f
open_key_file_for_read	src/pubcrypt.c	/^open_key_file_for_read(int *fd_p, const unsigned char *file) {$/;"	f	file:
open_key_file_for_write	src/pubcrypt.c	/^open_key_file_for_write(int *fd_p, const unsigned char *file) {$/;"	f	file:
open_log_file	src/logfile.c	/^open_log_file(const char *filepath,int *new_fd) {$/;"	f	file:
opened_wins	src/recvmsg.c	/^static GList *opened_wins=NULL;$/;"	v	file:
openwin_mutex	src/recvmsg.c	/^GStaticMutex openwin_mutex = G_STATIC_MUTEX_INIT;$/;"	v
parse_dir_request	src/downloads.c	/^parse_dir_request(const char *message,dir_request_t *ret,size_t max_len){$/;"	f	file:
parse_download_string	src/fileattach.c	/^parse_download_string(const char *string, GList **list){$/;"	f
parse_encrypted_message	src/cryptif.c	/^parse_encrypted_message(const unsigned char *message,$/;"	f	file:
parse_message	src/message.c	/^parse_message(const char *ipaddr,msg_data_t *msg,const char *message_buff,size_t len){$/;"	f
parse_request	src/tcp.c	/^parse_request(request_msg_t *req,const char *request_string){$/;"	f	file:
parser	src/sound.c	/^GstElement *pipeline, *source, *parser, *decoder, *conv, *sink;$/;"	v
password_confirm_window	src/dialog.c	/^password_confirm_window(int type, gchar **passphrase_p) {$/;"	f
password_setting_window	src/dialog.c	/^password_setting_window(const int type){$/;"	f
password_window_passwd_changed	src/callbacks.c	/^password_window_passwd_changed(GtkEditable     *editable) {$/;"	f	file:
path	src/dbusif.h	/^  gchar          *path;$/;"	m	struct:_dbus_con_t
pbkdf2_encoded_passwd_configured	src/pbkdf2.c	/^pbkdf2_encoded_passwd_configured(const char *enc_pass) {$/;"	f
pbkdf2_encoded_passwd_configured	src/pbkdf2.h	50;"	d
pbkdf2_encrypt	src/pbkdf2.c	/^pbkdf2_encrypt(const char *key, const char *salt, char **enc_pass) {$/;"	f
pbkdf2_encrypt	src/pbkdf2.h	48;"	d
pbkdf2_verify	src/pbkdf2.c	/^pbkdf2_verify(const char *plain_passwd,const char *crypt_passwd){$/;"	f
pbkdf2_verify	src/pbkdf2.h	49;"	d
pcrypt_crypt_generate_anspubkey_string	src/pubcrypt.c	/^pcrypt_crypt_generate_anspubkey_string(ipmsg_cap_t peer_cap, const char **message_p) {$/;"	f
pcrypt_crypt_generate_getpubkey_string	src/pubcrypt.c	/^pcrypt_crypt_generate_getpubkey_string(ipmsg_cap_t cap, const char **message_p) {$/;"	f
pcrypt_crypt_init_keys	src/pubcrypt.c	/^pcrypt_crypt_init_keys(void) {$/;"	f
pcrypt_crypt_parse_anspubkey	src/pubcrypt.c	/^pcrypt_crypt_parse_anspubkey(const char *string, ipmsg_cap_t *peer_cap, $/;"	f
pcrypt_crypt_refer_rsa_key	src/pubcrypt.c	/^pcrypt_crypt_refer_rsa_key(ipmsg_cap_t cap, RSA **rsa_p) {$/;"	f
pcrypt_crypt_refer_rsa_key_with_index	src/pubcrypt.c	/^pcrypt_crypt_refer_rsa_key_with_index(int index, RSA **rsa_p) {$/;"	f
pcrypt_crypt_release_keys	src/pubcrypt.c	/^pcrypt_crypt_release_keys(void) {$/;"	f
pcrypt_crypt_set_rsa_key	src/pubcrypt.c	/^pcrypt_crypt_set_rsa_key(ipmsg_cap_t cap, const RSA *rsa) {$/;"	f	file:
pcrypt_decrypt_message	src/pubcrypt.c	/^pcrypt_decrypt_message(ipmsg_cap_t cap, const char *encrypted_skey, $/;"	f
pcrypt_encrypt_message	src/pubcrypt.c	/^pcrypt_encrypt_message(const ipmsg_cap_t peer_cap, const char *peer_e, $/;"	f
pcrypt_get_key_filename	src/pubcrypt.c	/^pcrypt_get_key_filename(const ipmsg_cap_t key_type, char **pubkey, char **privkey) {$/;"	f
pcrypt_get_rsa_key_length	src/pubcrypt.c	/^pcrypt_get_rsa_key_length(ipmsg_cap_t key_type, size_t *len){$/;"	f
pcrypt_load_rsa_key	src/pubcrypt.c	/^pcrypt_load_rsa_key(const ipmsg_cap_t key_type, const gchar *passwd){$/;"	f
pcrypt_sign	src/pubcrypt.c	/^pcrypt_sign(const ipmsg_cap_t cap, const ipmsg_cap_t sign_type, $/;"	f
pcrypt_store_rsa_key	src/pubcrypt.c	/^pcrypt_store_rsa_key(const ipmsg_cap_t key_type, const char *passwd) {$/;"	f
pcrypt_verify_sign	src/pubcrypt.c	/^pcrypt_verify_sign(const ipmsg_cap_t cap, const ipmsg_cap_t sign_type, $/;"	f
peer	src/tcp.h	/^  char peer[NI_MAXHOST];$/;"	m	struct:_tcp_con
peer	src/udp.h	/^  char peer[NI_MAXHOST];$/;"	m	struct:_udp_con
peer_info	src/tcp.h	/^  struct addrinfo *peer_info;$/;"	m	struct:_tcp_con	typeref:struct:_tcp_con::addrinfo
pf	src/userdb.h	/^  int    pf;         \/* プロトコルファミリ  *\/$/;"	m	struct:_userdb
pipeline	src/sound.c	/^GstElement *pipeline, *source, *parser, *decoder, *conv, *sink;$/;"	v
pkcs5_F	src/pbkdf2.c	/^pkcs5_F(unsigned char *p,$/;"	f	file:
pkcs5_initial_prf	src/pbkdf2.c	/^pkcs5_initial_prf(unsigned char *p,$/;"	f	file:
pkcs5_subsequent_prf	src/pbkdf2.c	/^pkcs5_subsequent_prf(unsigned char *p,$/;"	f	file:
pkt_no	src/fileattach.h	/^  pktno_t pkt_no;$/;"	m	struct:_attach_file_block
pkt_no	src/protocol.c	/^static pktno_t pkt_no = 0;$/;"	v	file:
pkt_no	src/tcp.h	/^  pktno_t pkt_no;$/;"	m	struct:_request_msg
pkt_seq_no	src/message.h	/^  pktno_t pkt_seq_no;$/;"	m	struct:_msg_data
pktno	src/private.h	/^  pktno_t   pktno;$/;"	m	struct:_ipmsg_recvmsg_private
pktno_mutex	src/protocol.c	/^GStaticMutex pktno_mutex = G_STATIC_MUTEX_INIT;$/;"	v
pktno_t	src/ipmsg_types.h	/^typedef int32_t       pktno_t;$/;"	t
play_sound	src/sound.c	/^play_sound(void) {$/;"	f
play_sound	src/sound.c	/^play_sound(void){$/;"	f
port	src/udp.h	/^  int port;$/;"	m	struct:_udp_con
post_download_operation	src/downloads.c	/^post_download_operation(int code, const char *filepath, off_t size, off_t all_size, const char *dir, gboolean exec){$/;"	f
present_all_displayed_windows	src/recvmsg.c	/^present_all_displayed_windows(void) {$/;"	f
print_hex	src/cryptif.c	/^print_hex(const char *buff, const size_t len){$/;"	f	file:
print_one_user_entry	src/userdb.c	/^print_one_user_entry(gpointer data,gpointer user_data) {$/;"	f	file:
print_one_window	src/recvmsg.c	/^print_one_window(gpointer data,gpointer user_data) {$/;"	f	file:
prio	src/userdb.h	/^  int    prio;$/;"	m	struct:_userdb
prio_is_valid	src/g2ipmsg.h	79;"	d
progress_cell_data_func	src/downloads.c	/^progress_cell_data_func(GtkTreeViewColumn *col,$/;"	f	file:
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
proxy	src/dbusif.h	/^  DBusGProxy      *proxy;$/;"	m	struct:_dbus_con_t
pub_key_e	src/userdb.h	/^  gchar *pub_key_e;  \/* hexフォーマット(bigendian)の文字列  *\/$/;"	m	struct:_userdb
pub_key_n	src/userdb.h	/^  gchar *pub_key_n;  \/* hexフォーマット(bigendian)の文字列  *\/$/;"	m	struct:_userdb
pubkey_pass_string	src/hostinfo.c	/^static gchar *pubkey_pass_string = NULL;$/;"	v	file:
rc2_cbc_decrypt_setup	src/symcrypt.c	/^rc2_cbc_decrypt_setup(const char *key, const size_t key_len_byte, const char *iv, EVP_CIPHER_CTX **ret) {$/;"	f
rc2_cbc_encrypt_setup	src/symcrypt.c	/^rc2_cbc_encrypt_setup(const char *key, const size_t key_len_byte, const char *iv, $/;"	f
read_directory_files	src/tcp.c	/^read_directory_files(tcp_con_t *con,const char *parent,GnomeVFSFileInfo *info) {$/;"	f	file:
read_message	src/ipmsg.c	/^read_message(gpointer data,$/;"	f
read_message_dialog	src/dialog.c	/^read_message_dialog(const gchar *user,const gchar *ipaddr, long sec){$/;"	f
recv_attachments	src/downloads.c	/^recv_attachments(gpointer data) {$/;"	f
recv_message_window	src/recvmsg.c	/^recv_message_window(const msg_data_t *msg,const char *from){$/;"	f
recv_windows_are_stored	src/recvmsg.c	/^recv_windows_are_stored(void) {$/;"	f
ref_attach_file_block	src/fileattach.c	/^ref_attach_file_block(pktno_t pktno,const char *ipaddr) {$/;"	f
refer_attach_file	src/fileattach.c	/^refer_attach_file(const pktno_t pktno,int fileid,unsigned long *ipmsg_fattr,const char **path, off_t *size){$/;"	f
refer_group_name_from_msg	src/message.c	/^refer_group_name_from_msg(const msg_data_t *msg){$/;"	f
refer_host_name_from_msg	src/message.c	/^refer_host_name_from_msg(const msg_data_t *msg){$/;"	f
refer_nick_name_from_msg	src/message.c	/^refer_nick_name_from_msg(const msg_data_t *msg){$/;"	f
refer_pkt_no_name_from_msg	src/message.c	/^refer_pkt_no_name_from_msg(const msg_data_t *msg){$/;"	f
refer_user_list	src/userdb.c	/^refer_user_list(void) {$/;"	f
refer_user_name_from_msg	src/message.c	/^refer_user_name_from_msg(const msg_data_t *msg){$/;"	f
register_sent_message	src/msginfo.c	/^register_sent_message(const udp_con_t *con, const char *ipaddr, int pktno, const char *packet, size_t len){$/;"	f
release_attach_file	src/fileattach.c	/^release_attach_file(const pktno_t pktno,int fileid){$/;"	f
release_attach_file_block	src/fileattach.c	/^release_attach_file_block(const pktno_t pktno,gboolean force){$/;"	f
release_dir_info_contents	src/downloads.c	/^release_dir_info_contents(dir_request_t *info){$/;"	f	file:
release_lock_file	src/ipmsg.c	/^release_lock_file(void){$/;"	f
release_message_data	src/message.c	/^release_message_data(msg_data_t *msg){$/;"	f
release_udp_connection	src/udp.c	/^release_udp_connection(udp_con_t **con_p) {$/;"	f
release_user_entry	src/uicommon.c	/^release_user_entry(GtkTreeView *view) {$/;"	f	file:
remind_headers_state	src/uicommon.c	/^remind_headers_state(GtkWidget *window){$/;"	f
remove_attach_file	src/fileattach.c	/^remove_attach_file(attach_file_block_t *afcb,const gchar *path){$/;"	f
remove_link_from_upload_queue	src/fileattach.c	/^remove_link_from_upload_queue(pktno_t pktno,GList **r_node) {$/;"	f
remove_window_from_displaylist	src/recvmsg.c	/^remove_window_from_displaylist(GtkWidget *window){$/;"	f
remove_window_from_openlist	src/recvmsg.c	/^remove_window_from_openlist(GtkWidget *window){$/;"	f
request_msg_t	src/tcp.h	/^}request_msg_t;$/;"	t	typeref:struct:_request_msg
retry_message_handler	src/msginfo.c	/^retry_message_handler(gpointer data) {$/;"	f	file:
retry_messages_once	src/msginfo.c	/^retry_messages_once(void){$/;"	f
retry_remains	src/msginfo.h	/^  int  retry_remains;  \/*  残回数  *\/$/;"	m	struct:_message_info
reverse_image	src/recvmsg.c	/^static GtkWidget *reverse_image=NULL;$/;"	v	file:
rsa_key_mutex	src/pubcrypt.c	/^GStaticMutex    rsa_key_mutex = G_STATIC_MUTEX_INIT;$/;"	v
rsa_keys	src/pubcrypt.c	/^static RSA *rsa_keys[RSA_KEY_MAX];$/;"	v	file:
select_asymmetric_key	src/pubcrypt.c	/^select_asymmetric_key(const ipmsg_cap_t peer_cap, const  RSA *rsa, $/;"	f
select_rsa_key_for_answer	src/pubcrypt.c	/^select_rsa_key_for_answer(ipmsg_cap_t peer_cap, ipmsg_cap_t *selected_key, $/;"	f	file:
select_signature	src/pubcrypt.c	/^select_signature(const ipmsg_cap_t peer_cap, ipmsg_cap_t *selected_algo, $/;"	f
select_symmetric_key	src/symcrypt.c	/^select_symmetric_key(ipmsg_cap_t peer_cap, ipmsg_cap_t *selected_key, $/;"	f
select_user_list_by_addr	src/callbacks.c	/^select_user_list_by_addr(GtkTreeView *treeview,const char *ipaddr) {$/;"	f
send_directory	src/tcp.c	/^send_directory(tcp_con_t *con,const char *top_dir,const char *basename,GnomeVFSFileInfo *info){$/;"	f	file:
send_download_request	src/downloads.c	/^send_download_request(tcp_con_t *con, const char *ipaddr, ipmsg_ftype_t ftype,long pkt_no,int fileid){$/;"	f
send_header	src/tcp.c	/^send_header(tcp_con_t *con,const char *response){$/;"	f	file:
send_info_t	src/msginfo.h	/^}send_info_t;$/;"	t	typeref:struct:_send_info
sendmessage_get_attachment_part	src/callbacks.c	/^sendmessage_get_attachment_part(pktno_t pktno, GtkWidget *editor, const char **ext_part){$/;"	f	file:
seq_no	src/msginfo.h	/^  pktno_t  seq_no;         \/* パケット番号  *\/$/;"	m	struct:_message_info
serialize_mutex	src/util.c	/^GStaticMutex serialize_mutex = G_STATIC_MUTEX_INIT;$/;"	v
server_info	src/udp.h	/^  struct addrinfo *server_info;$/;"	m	struct:_udp_con	typeref:struct:_udp_con::addrinfo
set_attch_file_block_pktno	src/fileattach.c	/^set_attch_file_block_pktno(attach_file_block_t *afcb,const pktno_t pktno){$/;"	f
setup_addr_info	src/netcommon.c	/^setup_addr_info(struct addrinfo **infop, const char *ipaddr,int port,int stype,int family){$/;"	f
setup_attachment_editor	src/callbacks.c	/^setup_attachment_editor(GtkWidget *mainwindow){$/;"	f	file:
setup_download_view	src/downloads.c	/^setup_download_view(GtkTreeView *view,GList *dlist) {$/;"	f	file:
setup_download_window	src/menu.c	/^setup_download_window(GtkWidget *window){$/;"	f
setup_encoding_combobox	src/codeset.c	/^setup_encoding_combobox(GtkComboBox *combobox) {$/;"	f
setup_file_info	src/fileattach.c	/^setup_file_info(int newid,file_info_t *new_info,const gchar *path){$/;"	f	file:
setup_fuzai_view	src/fuzai.c	/^setup_fuzai_view(GtkTreeView *view) {$/;"	f	file:
setup_message_tree_view	src/uicommon.c	/^setup_message_tree_view(GtkWidget *view) {$/;"	f
show_download_list	src/fileattach.c	/^show_download_list(const GList *download_list) {$/;"	f	file:
show_file_list	src/fileattach.c	/^show_file_list(attach_file_block_t *afcb) {$/;"	f
show_ipmsg_log	src/menu.c	/^show_ipmsg_log(void){$/;"	f
show_one_window	src/recvmsg.c	/^show_one_window(gpointer data,gpointer user_data) {$/;"	f	file:
show_stored_windows	src/recvmsg.c	/^show_stored_windows(void) {$/;"	f
show_udp_con_node	src/udp.c	/^show_udp_con_node(gpointer data, gpointer user_data) {$/;"	f	file:
show_udp_connections	src/udp.c	/^show_udp_connections(void) {$/;"	f	file:
show_upload_queue	src/fileattach.c	/^show_upload_queue(void) {$/;"	f
sink	src/sound.c	/^GstElement *pipeline, *source, *parser, *decoder, *conv, *sink;$/;"	v
size	src/fileattach.h	/^  off_t size;$/;"	m	struct:_download_file_info
size	src/fileattach.h	/^  off_t size;$/;"	m	struct:_file_info
soc	src/tcp.h	/^  int soc;$/;"	m	struct:_tcp_con
soc	src/udp.h	/^  int soc;$/;"	m	struct:_udp_con
sock_recv_time_out	src/netcommon.c	/^sock_recv_time_out(int soc,long msec){$/;"	f
sock_send_time_out	src/netcommon.c	/^sock_send_time_out(int soc,long msec){$/;"	f
sock_set_buffer	src/netcommon.c	/^sock_set_buffer(int soc, unsigned long min_buf, unsigned long max_buf){$/;"	f
sock_set_recv_timeout	src/netcommon.c	/^sock_set_recv_timeout(int soc,int sec){$/;"	f
sort_filter1_menu_uiinfo	src/interface.c	/^static GnomeUIInfo sort_filter1_menu_uiinfo[] =$/;"	v	file:
sortfilter1_menu_uiinfo	src/interface.c	/^static GnomeUIInfo sortfilter1_menu_uiinfo[] =$/;"	v	file:
source	src/sound.c	/^GstElement *pipeline, *source, *parser, *decoder, *conv, *sink;$/;"	v
spc_pbkdf2	src/pbkdf2.c	/^spc_pbkdf2(unsigned char *pw, size_t pwlen, char *salt, uint64_t saltlen, uint32_t ic, unsigned char *dk,uint64_t dklen){$/;"	f	file:
start_message_watcher	src/recvmsg.c	/^start_message_watcher(GtkWidget *init_win){$/;"	f
store_message_window	src/recvmsg.c	/^store_message_window(const msg_data_t *msg,const char *from){$/;"	f
store_private_key	src/pubcrypt.c	/^store_private_key(const char *fpath, const RSA *rsa, const char *passwd){$/;"	f	file:
store_public_key	src/pubcrypt.c	/^store_public_key(const char *fpath, const RSA *rsa){$/;"	f	file:
store_win_mutex	src/recvmsg.c	/^GStaticMutex store_win_mutex = G_STATIC_MUTEX_INIT;$/;"	v
store_wins	src/recvmsg.c	/^static GList *store_wins=NULL;$/;"	v	file:
str_ipmsg_fattr	src/fileattach.c	/^static const gchar *str_ipmsg_fattr[]={$/;"	v	file:
strdup_with_check	src/userdb.c	200;"	d	file:
string_bin2hex	src/cryptif.c	/^string_bin2hex(const u_int8_t *bindata, int len, unsigned char **ret_p)$/;"	f	file:
string_hex2bin	src/cryptif.c	/^string_hex2bin(const char *hexdata, int *len,unsigned char **ret_p)$/;"	f	file:
supported_codes	src/codeset.c	/^static char *supported_codes[]={$/;"	v	file:
symcrypt_decrypt_message	src/symcrypt.c	/^symcrypt_decrypt_message(ipmsg_cap_t type,const unsigned char *encoded,$/;"	f
symcrypt_encrypt_message	src/symcrypt.c	/^symcrypt_encrypt_message(ipmsg_cap_t type, const unsigned char *plain,$/;"	f
symcrypt_get_skey_length	src/symcrypt.c	/^symcrypt_get_skey_length(const ipmsg_cap_t type, size_t *ret_len){$/;"	f
systray_event_button_press_event	src/systray.c	/^systray_event_button_press_event (GtkWidget       *widget,$/;"	f	file:
systray_message_watcher	src/systray.c	/^systray_message_watcher(GtkWidget *status_icon,gboolean is_normal) {$/;"	f
target_tag	src/udp.h	/^  int target_tag;$/;"	m	struct:_udp_con
targetentries	src/callbacks.c	/^static GtkTargetEntry targetentries[] =$/;"	v	file:
tcp_con_t	src/tcp.h	/^}tcp_con_t;$/;"	t	typeref:struct:_tcp_con
tcp_dsend_pkt_t	src/tcp.h	/^}tcp_dsend_pkt_t;$/;"	t	typeref:struct:_tcp_dsend_pkt
tcp_enable_keepalive	src/tcp.c	/^tcp_enable_keepalive(const tcp_con_t *con){$/;"	f
tcp_get_peeraddr	src/tcp.c	/^tcp_get_peeraddr(const tcp_con_t *con) {$/;"	f	file:
tcp_ipmsg_finalize_connection	src/tcp.c	/^tcp_ipmsg_finalize_connection(tcp_con_t *con){$/;"	f	file:
tcp_set_buffer	src/tcp.c	/^tcp_set_buffer(tcp_con_t *con) {$/;"	f
tcp_setup_client	src/tcp.c	/^tcp_setup_client(int family,const char *ipaddr,int port,tcp_con_t *con){$/;"	f
tcp_thread	src/applet.c	/^GThread *tcp_thread;$/;"	v
tcp_thread	src/main.c	/^GThread *tcp_thread;$/;"	v
tcp_transfer_dir	src/tcp.c	/^tcp_transfer_dir(tcp_con_t *con,const char *path){$/;"	f	file:
tcp_transfer_file	src/tcp.c	/^tcp_transfer_file(tcp_con_t *con,const char *path,const off_t size, off_t offset){$/;"	f	file:
time_var_mutex	src/util.c	/^GStaticMutex time_var_mutex = G_STATIC_MUTEX_INIT;$/;"	v
timer_id	src/msginfo.c	/^static guint timer_id;$/;"	v	file:
topdir	src/tcp.h	/^  char *topdir;$/;"	m	struct:_tcp_dsend_pkt
tv	src/message.h	/^  struct timeval tv;$/;"	m	struct:_msg_data	typeref:struct:_msg_data::timeval
type	src/private.h	/^  int type;$/;"	m	struct:_ipmsg_private_data
udp_con	src/ipmsg.c	/^udp_con_t *udp_con;$/;"	v
udp_con_find_by_family	src/udp.c	/^udp_con_find_by_family(gconstpointer a,gconstpointer b) {$/;"	f	file:
udp_con_t	src/udp.h	/^}udp_con_t;$/;"	t	typeref:struct:_udp_con
udp_disable_broadcast	src/udp.c	/^udp_disable_broadcast(const udp_con_t *con){$/;"	f
udp_enable_broadcast	src/udp.c	/^udp_enable_broadcast(const udp_con_t *con){$/;"	f
udp_get_peeraddr	src/udp.c	/^udp_get_peeraddr(const udp_con_t *con){$/;"	f
udp_list_mutex	src/udp.c	/^GStaticMutex udp_list_mutex = G_STATIC_MUTEX_INIT;$/;"	v
udp_recv_message	src/udp.c	/^udp_recv_message(const udp_con_t *con,char **msg,size_t *len){$/;"	f
udp_release_connection	src/udp.c	/^udp_release_connection(udp_con_t *con) {$/;"	f
udp_send_broadcast	src/udp.c	/^udp_send_broadcast(const udp_con_t *con,const char *msg,size_t len){$/;"	f
udp_send_broadcast_with_addr	src/udp.c	/^udp_send_broadcast_with_addr(const udp_con_t *con, const char *bcast, const char *msg, size_t len) {$/;"	f
udp_send_message	src/udp.c	/^udp_send_message(const udp_con_t *con, const char *ipaddr, int port, const char *msg, size_t len) {$/;"	f
udp_send_peer	src/udp.c	/^udp_send_peer(const udp_con_t *con, const char *msg, size_t len) {$/;"	f
udp_server_setup	src/udp.c	/^udp_server_setup(int port, int family) {$/;"	f
udp_set_buffer	src/udp.c	/^udp_set_buffer(const udp_con_t *con){$/;"	f	file:
udp_setup_server	src/udp.c	/^udp_setup_server(udp_con_t *con, int port, int family) {$/;"	f
ui_thread	src/applet.c	/^GThread *ui_thread;$/;"	v
ui_thread	src/main.c	/^GThread *ui_thread;$/;"	v
unref_attach_file_block	src/fileattach.c	/^unref_attach_file_block(pktno_t pktno) {$/;"	f
unregister_sent_message	src/msginfo.c	/^unregister_sent_message(int pktno){$/;"	f
update1_menu_uiinfo	src/interface.c	/^static GnomeUIInfo update1_menu_uiinfo[] =$/;"	v	file:
updateConfigWindowGroups	src/callbacks.c	/^updateConfigWindowGroups(GtkWidget *comboEntry) {$/;"	f	file:
update_all_user_list_view	src/userdb.c	/^update_all_user_list_view(void){$/;"	f
update_cached_prio	src/hostinfo.c	/^update_cached_prio(void) {$/;"	f	file:
update_download_monitor_button	src/menu.c	/^update_download_monitor_button(GtkTreeSelection *sel) {$/;"	f
update_download_view	src/fileattach.c	/^update_download_view(GtkWidget *window) {$/;"	f
update_file_display	src/downloads.c	/^update_file_display(unsigned long filetype,const char *filename, off_t size,GtkTreeModel *model,GtkTreeIter *iter){$/;"	f	file:
update_fuzai_config	src/fuzai.c	/^update_fuzai_config(GtkWidget *view,gboolean enter) {$/;"	f
update_lockkey_button_state	src/uicommon.c	/^update_lockkey_button_state(GtkToggleButton *togglebutton) {$/;"	f
update_one_group_entry	src/callbacks.c	/^update_one_group_entry(gpointer data,GtkComboBox *user_data) {$/;"	f
update_prioriy_for_selection	src/callbacks.c	/^update_prioriy_for_selection(GtkMenuItem *menuitem,int prio){$/;"	f	file:
update_rsa_encryption_button_state	src/uicommon.c	/^update_rsa_encryption_button_state(GtkToggleButton *togglebutton) {$/;"	f
update_user_entry	src/uicommon.c	/^update_user_entry(GList *top,GtkWidget *view,gboolean is_forced) {$/;"	f
update_users_on_message_window	src/userdb.c	/^update_users_on_message_window(GtkWidget *window,gboolean is_force){$/;"	f
upload_queue_mutex	src/fileattach.c	/^GStaticMutex upload_queue_mutex = G_STATIC_MUTEX_INIT;$/;"	v
uploads	src/fileattach.c	/^GList *uploads=NULL;$/;"	v
user	src/userdb.h	/^  gchar *user;$/;"	m	struct:_userdb
userdb_add_hostlist_entry	src/userdb.c	/^userdb_add_hostlist_entry(const udp_con_t *con, userdb_t *entry,const char **entry_string_p, int *is_last){$/;"	f	file:
userdb_add_user	src/userdb.c	/^userdb_add_user(const udp_con_t *con,const msg_data_t *msg){$/;"	f
userdb_add_waiter_window	src/userdb.c	/^userdb_add_waiter_window(GtkWidget *window){$/;"	f
userdb_cleanup_userdb	src/userdb.c	/^userdb_cleanup_userdb(void){$/;"	f
userdb_del_user	src/userdb.c	/^userdb_del_user(const udp_con_t *con,const msg_data_t *msg){$/;"	f
userdb_find_by_ipaddr	src/userdb.c	/^userdb_find_by_ipaddr(gconstpointer a,gconstpointer b) {$/;"	f	file:
userdb_find_group	src/userdb.c	/^userdb_find_group(gconstpointer a,gconstpointer b) {$/;"	f	file:
userdb_get_cap_by_addr	src/userdb.c	/^userdb_get_cap_by_addr(const char *ipaddr, unsigned long *cap_p, unsigned long *crypt_cap_p){$/;"	f
userdb_get_hostlist_string	src/userdb.c	/^userdb_get_hostlist_string(int start, int *length, const char **ret_string) {$/;"	f
userdb_get_public_key_by_addr	src/userdb.c	/^userdb_get_public_key_by_addr(const char *peer_addr,unsigned long *cap_p,char **key_e,char **key_n){$/;"	f
userdb_hostlist_answer_add	src/userdb.c	/^userdb_hostlist_answer_add(const udp_con_t *con,const msg_data_t *msg){$/;"	f
userdb_init_userdb	src/userdb.c	/^userdb_init_userdb(void){$/;"	f
userdb_invalidate_userdb	src/userdb.c	/^userdb_invalidate_userdb(void){$/;"	f
userdb_mutex	src/userdb.c	/^GStaticMutex userdb_mutex = G_STATIC_MUTEX_INIT;$/;"	v
userdb_print_user_list	src/userdb.c	/^userdb_print_user_list(void){$/;"	f
userdb_refer_proto_family	src/userdb.c	/^userdb_refer_proto_family(const char *ipaddr, int *family) {$/;"	f
userdb_remove_waiter_window	src/userdb.c	/^userdb_remove_waiter_window(GtkWidget *window){$/;"	f
userdb_replace_prio_by_addr	src/userdb.c	/^userdb_replace_prio_by_addr(const char *ipaddr,int prio,gboolean need_notify){$/;"	f
userdb_replace_public_key_by_addr	src/userdb.c	/^userdb_replace_public_key_by_addr(const char *ipaddr,const unsigned long peer_cap,const char *key_e,const char *key_n){$/;"	f
userdb_search_user_by_addr	src/userdb.c	/^userdb_search_user_by_addr(const char *ipaddr,const userdb_t **entry_ref){$/;"	f
userdb_send_broad_cast	src/userdb.c	/^userdb_send_broad_cast(const udp_con_t *con,const char *msg,size_t len) {$/;"	f
userdb_sort_with_view_config	src/userdb.c	/^userdb_sort_with_view_config(gconstpointer data_a,$/;"	f	file:
userdb_t	src/userdb.h	/^}userdb_t;$/;"	t	typeref:struct:_userdb
userdb_update_group_list	src/userdb.c	/^userdb_update_group_list(GtkComboBox *widget){$/;"	f
userdb_update_user	src/userdb.c	/^userdb_update_user(const udp_con_t *con,const msg_data_t *msg){$/;"	f
userdb_wait_public_key	src/userdb.c	/^userdb_wait_public_key(const char *peer_addr,unsigned long *cap_p,char **key_e,char **key_n){$/;"	f
userlistPopUpMenu_uiinfo	src/interface.c	/^static GnomeUIInfo userlistPopUpMenu_uiinfo[] =$/;"	v	file:
username	src/message.h	/^  char *username;$/;"	m	struct:_msg_data
users	src/userdb.c	/^static GList *users=NULL;$/;"	v	file:
userview_set_new_view_priority	src/uicommon.c	/^userview_set_new_view_priority(GtkTreeModel *model,$/;"	f	file:
userview_set_view_priority	src/uicommon.c	/^userview_set_view_priority(GtkTreeModel *model,$/;"	f
userview_set_view_priority_without_update	src/uicommon.c	/^userview_set_view_priority_without_update(GtkTreeModel *model,$/;"	f
version	src/message.h	/^  int version;$/;"	m	struct:_msg_data
wait_socket	src/netcommon.c	/^wait_socket(int soc,int wait_for,int sec) {$/;"	f
waiter_windows	src/userdb.c	/^static GList *waiter_windows=NULL;$/;"	v	file:
war_out	src/msgout.h	45;"	d
win_mutex	src/userdb.c	/^GStaticMutex win_mutex = G_STATIC_MUTEX_INIT;$/;"	v
write_one_line	src/logfile.c	/^write_one_line(const char *string) {$/;"	f	file:
xattrs	src/fileattach.h	/^  GList *xattrs;  \/*未使用*\/$/;"	m	struct:_file_info
